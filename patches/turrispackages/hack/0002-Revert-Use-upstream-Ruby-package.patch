From bd2948e490db7fc9b7d3d135a169356511974f1c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Karel=20Ko=C4=8D=C3=AD?= <karel.koci@nic.cz>
Date: Mon, 5 Aug 2019 10:35:19 +0200
Subject: [PATCH] Revert "Use upstream Ruby package"

This reverts commit cefc2e525f01973615c267c4dcf9aa5ee766adfb.
---
 lang/ruby-breakpoint/Makefile                 |  28 -
 lang/ruby/Makefile                            | 766 ++++++++++++++++++
 lang/ruby/files/ruby                          |   5 +
 .../001-acinclude.m4_rename_aclocal.m4.patch  | 152 ++++
 lang/ruby/ruby_find_pkgsdeps                  | 266 ++++++
 lang/ruby/ruby_missingfiles                   |  28 +
 utils/compass/Makefile                        |  28 -
 web/foris/foris/Makefile                      |   4 +-
 8 files changed, 1218 insertions(+), 59 deletions(-)
 delete mode 100644 lang/ruby-breakpoint/Makefile
 create mode 100644 lang/ruby/Makefile
 create mode 100644 lang/ruby/files/ruby
 create mode 100644 lang/ruby/patches/001-acinclude.m4_rename_aclocal.m4.patch
 create mode 100644 lang/ruby/ruby_find_pkgsdeps
 create mode 100644 lang/ruby/ruby_missingfiles
 delete mode 100644 utils/compass/Makefile

diff --git a/lang/ruby-breakpoint/Makefile b/lang/ruby-breakpoint/Makefile
deleted file mode 100644
index 37697b1..0000000
--- a/lang/ruby-breakpoint/Makefile
+++ /dev/null
@@ -1,28 +0,0 @@
-#
-## Copyright (C) 2019 CZ.NIC z.s.p.o. (http://www.nic.cz/)
-#
-## This is free software, licensed under the GNU General Public License v2.
-# See /LICENSE for more information.
-# #
-#
-include $(TOPDIR)/rules.mk
-
-PKG_NAME:=ruby-breakpoint
-PKG_VERSION:=2.7.1
-PKG_RELEASE:=1
-PKG_MAINTAINER:=CZ.NIC <packaging@turris.cz>
-
-HOST_BUILD_DEPENDS:=ruby/host
-
-include $(INCLUDE_DIR)/host-build.mk
-include $(INCLUDE_DIR)/package.mk
-
-Build/Compile:=:
-Host/Compile:=:
-
-define Host/Install
-	$(STAGING_DIR_HOSTPKG)/bin/gem install breakpoint -v $(PKG_VERSION)
-endef
-
-$(eval $(call HostBuild))
-$(eval $(call Build/DefaultTargets))
diff --git a/lang/ruby/Makefile b/lang/ruby/Makefile
new file mode 100644
index 0000000..08b33e4
--- /dev/null
+++ b/lang/ruby/Makefile
@@ -0,0 +1,766 @@
+#
+# Copyright (C) 2006-2016 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+# To Do:
+#  - dirs not removed when uninstalling!
+#
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=ruby
+PKG_VERSION:=2.3.6
+PKG_RELEASE:=1
+
+PKG_LIBVER:=2.3
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
+PKG_SOURCE_URL:=http://cache.ruby-lang.org/pub/ruby/$(PKG_LIBVER)/
+PKG_MD5SUM:=07aa3ed3bffbfb97b6fc5296a86621e6bb5349c6f8e549bd0db7f61e3e210fd0
+PKG_MAINTAINER:=Luiz Angelo Daros de Luca <luizluca@gmail.com>
+PKG_LICENSE:=BSD-2-Clause
+PKG_LICENSE_FILES:=COPYING
+
+PKG_BUILD_DEPENDS:=ruby/host
+PKG_INSTALL:=1
+PKG_BUILD_PARALLEL:=1
+PKG_FIXUP:=autoreconf
+
+include $(INCLUDE_DIR)/host-build.mk
+include $(INCLUDE_DIR)/package.mk
+include $(INCLUDE_DIR)/nls.mk
+
+HOST_CONFIGURE_ARGS += \
+	--disable-install-doc \
+	--disable-install-rdoc \
+	--disable-install-capi \
+	--without-gmp \
+	--with-out-ext=tk,tk/tkutil,win32,win32ole,dbm,gdbm,readline \
+
+# Does not compile with this. Workaround is --without-gmp
+# https://bugs.ruby-lang.org/issues/11940
+	#--with-static-linked-ext \
+
+# even not used, host build with restricted exts results in gems not being
+# compiled for target (probably some cross compiling problem like checking
+# host for selecting target features)
+#	--with-out-ext \
+#	--with-ext=thread,stringio \
+
+CONFIGURE_ARGS += \
+	--enable-shared \
+	--enable-static \
+	--disable-rpath \
+	$(call autoconf_bool,CONFIG_IPV6,ipv6) \
+	--disable-install-doc \
+	--disable-install-capi \
+	--with-ruby-version=minor \
+	--with-iconv-dir=$(ICONV_PREFIX) \
+	--with-out-ext=tk,tk/tkutil,win32,win32ole
+
+ifndef CONFIG_RUBY_DIGEST_USE_OPENSSL
+CONFIGURE_ARGS += \
+	--with-bundled-sha1\
+	--with-bundled-md5\
+	--with-bundled-rmd160\
+	--with-bundled-sha2 \
+
+endif
+
+TARGET_LDFLAGS += -L$(PKG_BUILD_DIR)
+
+# Ruby uses DLDFLAGS and not LDFLAGS for libraries. LDFLAGS is only for execs.
+# However, DLDFLAGS from configure is not passed to Makefile when target is linux.
+# XLDFLAGS is used by both libraries and execs. This is somehow brute force but
+# if will fix when some LD_FLAGS is needef for libraries. As side effect, it will
+# duplicate ld args for binaries.
+CONFIGURE_VARS += XLDFLAGS="$(TARGET_LDFLAGS)"
+
+MAKE_FLAGS += \
+	DESTDIR="$(PKG_INSTALL_DIR)" \
+	SHELL="/bin/bash"
+
+define Build/InstallDev
+	( cd $(PKG_INSTALL_DIR); $(TAR) -cf - \
+		. \
+	) | ( cd $(1); $(TAR) -xf - )
+endef
+
+define Host/Install
+	# When ruby version is updated, make install asks in some cases before replace
+	# an existing different file. Remove them before install and avoid the interaction
+	rm -f $(HOST_BUILD_PREFIX)/bin/rake
+	$(call Host/Install/Default)
+endef
+
+define Package/ruby/Default
+  SUBMENU:=Ruby
+  SECTION:=lang
+  CATEGORY:=Languages
+  TITLE:=Ruby scripting language
+  URL:=http://www.ruby-lang.org/
+endef
+
+define Package/ruby/Default/description
+ Ruby is the interpreted scripting language for quick and easy
+ object-oriented programming.  It has many features to process text files
+ and to do system management tasks (as in perl).  It is simple,
+ straight-forward, and extensible.
+
+endef
+
+define Package/ruby
+$(call Package/ruby/Default)
+  TITLE+= (interpreter)
+  DEPENDS:=+libruby
+endef
+
+define Package/ruby/description
+$(call Package/ruby/Default/description)
+endef
+
+define RubyDependency
+    $(eval \
+        $(call Package/Default)
+        $(call Package/ruby-$(1))
+        FILTER_CONFIG:=$$(strip \
+            $$(foreach config_dep, \
+                $$(filter @%, \
+                    $$(foreach v, \
+                        $$(DEPENDS), \
+                        $$(if $$(findstring :,$$v),,$$v) \
+                    ) \
+                ), \
+                $$(subst @,,$$(config_dep)) \
+            ) \
+        )
+        ifneq (,$$(FILTER_CONFIG))
+           FILTER_CONFIG:=($$(subst $$(space),&&,$$(FILTER_CONFIG))):
+        endif
+    ) \
+    +$(FILTER_CONFIG)ruby-$(1)
+endef
+
+define Package/ruby/config
+    comment "Standard Library"
+      depends on PACKAGE_ruby
+
+    config PACKAGE_ruby-stdlib
+      depends on PACKAGE_ruby
+      default m if ALL
+      prompt "Select Ruby Complete Standard Library (ruby-stdlib)"
+
+endef
+
+define Package/ruby/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/$(PKG_LIBVER)
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/vendor_ruby/$(PKG_LIBVER)
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/site_ruby/$(PKG_LIBVER)
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/ruby $(1)/usr/lib/ruby/ruby$(PKG_LIBVER)-bin
+	$(INSTALL_BIN) ./files/ruby $(1)/usr/bin/ruby
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/ruby/vendor_ruby/$(PKG_LIBVER)/* $(1)/usr/lib/ruby/vendor_ruby/$(PKG_LIBVER)/
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/ruby/site_ruby/$(PKG_LIBVER)/* $(1)/usr/lib/ruby/site_ruby/$(PKG_LIBVER)/
+	$(SED) "s%@RUBY_LIBPATH@%/usr/lib/ruby/$(PKG_LIBVER)%" $(1)/usr/bin/ruby
+	$(SED) "s%@RUBY_BINPATH@%/usr/lib/ruby/ruby$(PKG_LIBVER)-bin%" $(1)/usr/bin/ruby
+endef
+
+define Package/libruby
+$(call Package/ruby/Default)
+  SUBMENU:=
+  SECTION:=libs
+  CATEGORY:=Libraries
+  TITLE+= (shared library)
+  DEPENDS+= +libpthread +librt +libgmp
+  ABI_VERSION:=$(PKG_LIBVER)
+endef
+define Package/libruby/install
+	$(INSTALL_DIR) $(1)/usr/lib
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/libruby.so.* $(1)/usr/lib/
+endef
+
+RUBY_STDLIB :=
+define Package/ruby-stdlib
+$(call Package/ruby/Default)
+  TITLE:=Ruby standard libraries (metadata for all stdlib subsets)
+  DEPENDS:=ruby $(foreach subpackage,$(RUBY_STDLIB),$(strip $(call RubyDependency,$(subpackage))))
+  HIDDEN:=1
+endef
+
+define Package/ruby-stdlib/description
+ This metapackage currently install all ruby-* packages,
+ providing a complete Ruby Standard Library.
+
+endef
+
+# nothing to do
+define Package/ruby-stdlib/install
+	/bin/true
+endef
+
+define Package/ruby-bigdecimal/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/bigdecimal.so
+/usr/lib/ruby/$(PKG_LIBVER)/bigdecimal/
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default/bigdecimal-*.gemspec
+endef
+
+define Package/ruby-cgi/files
+/usr/lib/ruby/$(PKG_LIBVER)/cgi
+/usr/lib/ruby/$(PKG_LIBVER)/cgi.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/cgi/escape.so
+endef
+
+define Package/ruby-csv/files
+/usr/lib/ruby/$(PKG_LIBVER)/csv.rb
+endef
+
+define Package/ruby-datetime/files
+/usr/lib/ruby/$(PKG_LIBVER)/time.rb
+/usr/lib/ruby/$(PKG_LIBVER)/date.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/date_core.so
+endef
+
+define Package/ruby-dbm/description
+ The DBM class provides a wrapper to a Unix-style dbm or Database Manager library.
+ This package provides dbm.so file.
+
+endef
+define Package/ruby-dbm/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/dbm.so
+endef
+
+define Package/ruby-debuglib/files
+/usr/lib/ruby/$(PKG_LIBVER)/profile.rb
+/usr/lib/ruby/$(PKG_LIBVER)/profiler.rb
+/usr/lib/ruby/$(PKG_LIBVER)/debug.rb
+/usr/lib/ruby/$(PKG_LIBVER)/tracer.rb
+/usr/lib/ruby/$(PKG_LIBVER)/benchmark.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/objspace.so
+endef
+
+define Package/ruby-did-you-mean/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/did_you_mean-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/
+endef
+define Package/ruby-did-you-mean/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/benchmark
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/doc
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/evaluation
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/test
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/did_you_mean-*/*.md
+endef
+
+define Package/ruby-digest/description
+ Provides digest* files. Can be configured to use OpenSSL or
+ bundled hash functions.
+
+endef
+define Package/ruby-digest/config
+
+	config RUBY_DIGEST_USE_OPENSSL
+		bool "Use OpenSSL functions for ruby digest hash functions"
+        depends on PACKAGE_ruby-digest
+		help
+			Ruby can use OpenSSL hash functions or compile alternative implementations. Using
+			OpenSSL saves about 30KBytes (less when compressed) but requires OpenSSL (that
+			is way bigger than that). However, if OpenSSL is already needed by another usage,
+			as ruby-openssl or any other non ruby package, it is better to mark this option.
+		default n
+
+endef
+define Package/ruby-digest/files
+/usr/lib/ruby/$(PKG_LIBVER)/digest
+/usr/lib/ruby/$(PKG_LIBVER)/digest.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/digest.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/digest/*
+endef
+
+define Package/ruby-drb/files
+/usr/lib/ruby/$(PKG_LIBVER)/drb.rb
+/usr/lib/ruby/$(PKG_LIBVER)/drb
+endef
+
+define Package/ruby-enc/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/enc/encdb.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/enc/iso_8859_1.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/enc/utf_*.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/enc/euc_jp.so
+endef
+
+define Package/ruby-enc-extra/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/enc
+endef
+define Package/ruby-enc-extra/files-excluded
+$(call Package/ruby-enc/files)
+endef
+
+define Package/ruby-erb/files
+/usr/bin/erb
+/usr/lib/ruby/$(PKG_LIBVER)/erb.rb
+endef
+
+define Package/ruby-fiddle/files
+/usr/lib/ruby/$(PKG_LIBVER)/fiddle.rb
+/usr/lib/ruby/$(PKG_LIBVER)/fiddle/
+/usr/lib/ruby/$(PKG_LIBVER)/*/fiddle.so
+endef
+
+define Package/ruby-filelib/files
+/usr/lib/ruby/$(PKG_LIBVER)/tmpdir.rb
+/usr/lib/ruby/$(PKG_LIBVER)/tempfile.rb
+/usr/lib/ruby/$(PKG_LIBVER)/pathname.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/pathname.so
+/usr/lib/ruby/$(PKG_LIBVER)/find.rb
+/usr/lib/ruby/$(PKG_LIBVER)/fileutils.rb
+endef
+
+define Package/ruby-gdbm/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/gdbm.so
+endef
+
+define Package/ruby-gems/files
+/usr/lib/ruby/$(PKG_LIBVER)/ubygems.rb
+/usr/lib/ruby/$(PKG_LIBVER)/rubygems.rb
+/usr/lib/ruby/$(PKG_LIBVER)/rubygems
+endef
+define Package/ruby-gems/files-excluded
+/usr/lib/ruby/$(PKG_LIBVER)/rubygems/test_case.rb
+/usr/lib/ruby/$(PKG_LIBVER)/rubygems/package/tar_test_case.rb
+/usr/lib/ruby/$(PKG_LIBVER)/rubygems/installer_test_case.rb
+endef
+define Package/ruby-gems/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/gem $(1)/usr/bin/
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/gems
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/doc
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/cache
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/extensions
+	$(INSTALL_DIR) $(1)/usr/lib/ruby/gems/$(PKG_LIBVER)/build_info
+	$(call RubyBuildPackage/install,gems,$(1))
+endef
+
+define Package/ruby-io-console/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/io/console.so
+/usr/lib/ruby/$(PKG_LIBVER)/io/console/
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default/io-console-*.gemspec
+endef
+
+define Package/ruby-irb/files
+/usr/lib/ruby/$(PKG_LIBVER)/irb
+/usr/lib/ruby/$(PKG_LIBVER)/irb.rb
+endef
+define Package/ruby-irb/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/irb $(1)/usr/bin/
+	$(call RubyBuildPackage/install,irb,$(1))
+endef
+
+define Package/ruby-json/files
+/usr/lib/ruby/$(PKG_LIBVER)/json.rb
+/usr/lib/ruby/$(PKG_LIBVER)/json
+/usr/lib/ruby/$(PKG_LIBVER)/*/json
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default/json-*.gemspec
+endef
+define Package/ruby-json/files-excluded
+$(call Package/ruby-psych/files)
+endef
+
+define Package/ruby-logger/files
+/usr/lib/ruby/$(PKG_LIBVER)/logger.rb
+/usr/lib/ruby/$(PKG_LIBVER)/syslog/logger.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/syslog.so
+endef
+
+define Package/ruby-math/files
+/usr/lib/ruby/$(PKG_LIBVER)/prime.rb
+/usr/lib/ruby/$(PKG_LIBVER)/mathn.rb
+/usr/lib/ruby/$(PKG_LIBVER)/cmath.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/mathn
+/usr/lib/ruby/$(PKG_LIBVER)/matrix.rb
+/usr/lib/ruby/$(PKG_LIBVER)/matrix
+endef
+
+define Package/ruby-minitest/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/minitest-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/minitest-*
+endef
+define Package/ruby-minitest/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/minitest-*/test
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/minitest-*/*.rdoc
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/minitest-*/*.txt
+endef
+
+define Package/ruby-misc/files
+/usr/lib/ruby/$(PKG_LIBVER)/English.rb
+/usr/lib/ruby/$(PKG_LIBVER)/abbrev.rb
+/usr/lib/ruby/$(PKG_LIBVER)/base64.rb
+/usr/lib/ruby/$(PKG_LIBVER)/delegate.rb
+/usr/lib/ruby/$(PKG_LIBVER)/e2mmap.rb
+/usr/lib/ruby/$(PKG_LIBVER)/expect.rb
+/usr/lib/ruby/$(PKG_LIBVER)/getoptlong.rb
+/usr/lib/ruby/$(PKG_LIBVER)/open3.rb
+/usr/lib/ruby/$(PKG_LIBVER)/ostruct.rb
+/usr/lib/ruby/$(PKG_LIBVER)/scanf.rb
+/usr/lib/ruby/$(PKG_LIBVER)/securerandom.rb
+/usr/lib/ruby/$(PKG_LIBVER)/set.rb
+/usr/lib/ruby/$(PKG_LIBVER)/shellwords.rb
+/usr/lib/ruby/$(PKG_LIBVER)/tsort.rb
+/usr/lib/ruby/$(PKG_LIBVER)/weakref.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/continuation.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/coverage.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/etc.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/fcntl.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/fiber.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/pty.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/stringio.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/strscan.so
+endef
+
+define Package/ruby-mkmf/files
+/usr/lib/ruby/$(PKG_LIBVER)/mkmf.rb
+/usr/lib/ruby/$(PKG_LIBVER)/un.rb
+endef
+
+define Package/ruby-multithread/files
+/usr/lib/ruby/$(PKG_LIBVER)/monitor.rb
+/usr/lib/ruby/$(PKG_LIBVER)/timeout.rb
+/usr/lib/ruby/$(PKG_LIBVER)/thwait.rb
+/usr/lib/ruby/$(PKG_LIBVER)/mutex_m.rb
+/usr/lib/ruby/$(PKG_LIBVER)/sync.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/thread.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/io/wait.so
+/usr/lib/ruby/$(PKG_LIBVER)/*/io/nonblock.so
+endef
+
+define Package/ruby-net/files
+/usr/lib/ruby/$(PKG_LIBVER)/open-uri.rb
+/usr/lib/ruby/$(PKG_LIBVER)/net/*
+endef
+
+define Package/ruby-net-telnet/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/net-telnet-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/net-telnet-*/
+endef
+define Package/ruby-net-telnet/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/net-telnet-*/*.md
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/net-telnet-*/*.txt
+endef
+
+define Package/ruby-nkf/files
+/usr/lib/ruby/$(PKG_LIBVER)/kconv.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/nkf.so
+endef
+
+define Package/ruby-openssl/files
+/usr/lib/ruby/$(PKG_LIBVER)/openssl
+/usr/lib/ruby/$(PKG_LIBVER)/openssl.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/openssl.so
+endef
+
+define Package/ruby-optparse/files
+/usr/lib/ruby/$(PKG_LIBVER)/optparse.rb
+/usr/lib/ruby/$(PKG_LIBVER)/optionparser.rb
+/usr/lib/ruby/$(PKG_LIBVER)/optparse
+endef
+
+define Package/ruby-patterns/files
+/usr/lib/ruby/$(PKG_LIBVER)/observer.rb
+/usr/lib/ruby/$(PKG_LIBVER)/singleton.rb
+/usr/lib/ruby/$(PKG_LIBVER)/forwardable.rb
+endef
+
+define Package/ruby-powerassert/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/power_assert-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/power_assert-*
+endef
+define Package/ruby-powerassert/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/power_assert-*/test
+endef
+
+define Package/ruby-prettyprint/files
+/usr/lib/ruby/$(PKG_LIBVER)/pp.rb
+/usr/lib/ruby/$(PKG_LIBVER)/prettyprint.rb
+endef
+
+define Package/ruby-pstore/files
+/usr/lib/ruby/$(PKG_LIBVER)/pstore.rb
+endef
+
+define Package/ruby-psych/files
+/usr/lib/ruby/$(PKG_LIBVER)/psych
+/usr/lib/ruby/$(PKG_LIBVER)/psych.rb
+/usr/lib/ruby/$(PKG_LIBVER)/psych_jars.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/psych.so
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default/psych-*.gemspec
+endef
+
+define Package/ruby-racc/files
+/usr/lib/ruby/$(PKG_LIBVER)/racc
+/usr/lib/ruby/$(PKG_LIBVER)/*/racc/*.so
+endef
+
+define Package/ruby-rake/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/rake-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-*/
+endef
+define Package/ruby-rake/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-*/doc
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-*/test
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-*/*.rdoc
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-*/*.txt
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rake-10.4.2/lib/rake/runtest.rb
+endef
+define Package/ruby-rake/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/rake $(1)/usr/bin/;
+	$(call RubyBuildPackage/install,rake,$(1))
+endef
+
+define Package/ruby-rbconfig/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/rbconfig.rb
+/usr/lib/ruby/$(PKG_LIBVER)/rbconfig/*
+/usr/lib/ruby/$(PKG_LIBVER)/*/rbconfig/*.so
+endef
+
+define Package/ruby-rdoc/files
+	/usr/lib/ruby/$(PKG_LIBVER)/rdoc.rb
+	/usr/lib/ruby/$(PKG_LIBVER)/rdoc
+	/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/rdoc-*
+	/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/default/rdoc-*.gemspec
+endef
+define Package/ruby-rdoc/files-excluded
+	/usr/lib/ruby/$(PKG_LIBVER)/rdoc/test_case.rb
+	/usr/lib/ruby/$(PKG_LIBVER)/rdoc/markup/formatter_test_case.rb
+	/usr/lib/ruby/$(PKG_LIBVER)/rdoc/markup/text_formatter_test_case.rb
+endef
+define Package/ruby-rdoc/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/rdoc $(1)/usr/bin/
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/ri $(1)/usr/bin/
+	$(call RubyBuildPackage/install,rdoc,$(1))
+endef
+
+define Package/ruby-readline/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/readline.so
+endef
+
+define Package/ruby-rexml/files
+/usr/lib/ruby/$(PKG_LIBVER)/rexml
+endef
+
+define Package/ruby-rinda/files
+/usr/lib/ruby/$(PKG_LIBVER)/rinda
+endef
+
+define Package/ruby-ripper/files
+/usr/lib/ruby/$(PKG_LIBVER)/ripper.rb
+/usr/lib/ruby/$(PKG_LIBVER)/ripper
+/usr/lib/ruby/$(PKG_LIBVER)/*/ripper.so
+endef
+
+define Package/ruby-rss/files
+/usr/lib/ruby/$(PKG_LIBVER)/rss
+/usr/lib/ruby/$(PKG_LIBVER)/rss.rb
+endef
+
+define Package/ruby-sdbm/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/sdbm.so
+endef
+
+define Package/ruby-shell/files
+/usr/lib/ruby/$(PKG_LIBVER)/shell.rb
+/usr/lib/ruby/$(PKG_LIBVER)/shell
+endef
+
+define Package/ruby-socket/files
+/usr/lib/ruby/$(PKG_LIBVER)/ipaddr.rb
+/usr/lib/ruby/$(PKG_LIBVER)/resolv-replace.rb
+/usr/lib/ruby/$(PKG_LIBVER)/resolv.rb
+/usr/lib/ruby/$(PKG_LIBVER)/socket.rb
+/usr/lib/ruby/$(PKG_LIBVER)/*/socket.so
+endef
+
+define Package/ruby-testunit/files
+/usr/lib/ruby/gems/$(PKG_LIBVER)/specifications/test-unit-*.gemspec
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/test-unit-*
+endef
+define Package/ruby-testunit/files-excluded
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/test-unit-*/doc
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/test-unit-*/test
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/test-unit-*/sample
+/usr/lib/ruby/gems/$(PKG_LIBVER)/gems/test-unit-*/*.md
+endef
+
+define Package/ruby-unicodenormalize/files
+/usr/lib/ruby/$(PKG_LIBVER)/unicode_normalize.rb
+/usr/lib/ruby/$(PKG_LIBVER)/unicode_normalize
+endef
+
+define Package/ruby-uri/files
+/usr/lib/ruby/$(PKG_LIBVER)/uri.rb
+/usr/lib/ruby/$(PKG_LIBVER)/uri
+endef
+
+define Package/ruby-webrick/files
+/usr/lib/ruby/$(PKG_LIBVER)/webrick
+/usr/lib/ruby/$(PKG_LIBVER)/webrick.rb
+endef
+
+define Package/ruby-xmlrpc/files
+/usr/lib/ruby/$(PKG_LIBVER)/xmlrpc
+/usr/lib/ruby/$(PKG_LIBVER)/xmlrpc.rb
+endef
+
+define Package/ruby-yaml/files
+/usr/lib/ruby/$(PKG_LIBVER)/yaml
+/usr/lib/ruby/$(PKG_LIBVER)/yaml.rb
+endef
+
+define Package/ruby-zlib/files
+/usr/lib/ruby/$(PKG_LIBVER)/*/zlib.so
+endef
+
+RUBY_FILES = $(strip $(call Package/ruby-$(1)/files))
+RUBY_FILES_EXCLUDED = $(strip $(call Package/ruby-$(1)/files-excluded))
+
+# gems that should be installed to host environment
+GEM_LIST:=compass breakpoint
+GEM_compass_VERSION:=1.0.1
+GEM_breakpoint_VERSION:=2.5.0
+
+define Host/Install
+	$(call Host/Install/Default)
+
+	$(foreach gem,$(GEM_LIST),$(STAGING_DIR_HOSTPKG)/bin/gem install $(gem) -v $(GEM_$(gem)_VERSION);)
+endef
+
+define Host/Clean
+	$(RM) -rf $(STAGING_DIR_HOST)/lib/ruby
+	$(RM) -rf $(STAGING_DIR_HOST)/share/ri
+endef
+
+# 1: short name
+# 2: install dir
+define RubyBuildPackage/install
+	( \
+	  cd $(PKG_INSTALL_DIR) && \
+	  $(TAR) -cf - \
+	    --files-from <(ls -1d $(patsubst /%,%,$(RUBY_FILES))) \
+	    $(if $(RUBY_FILES_EXCLUDED),--exclude-from <(ls -1d $(patsubst /%,%,$(RUBY_FILES_EXCLUDED)))) \
+	) | ( \
+	  [ -n "$(2)" ] && cd $(2) && $(TAR) -xf - \
+	)
+endef
+
+# 1: short name
+# 2: description
+# 3: dependencies on other packages
+define RubyBuildPackage
+  RUBY_STDLIB += $(1)
+
+  # Package definition
+  ifndef Package/ruby-$(1)
+    define Package/ruby-$(1)
+      $(call Package/ruby/Default)
+      TITLE:=Ruby $(2)
+      DEPENDS:=ruby $(3)
+    endef
+  endif
+
+  ifndef Package/ruby-$(1)/description
+    define Package/ruby-$(1)/description
+      This package contains the ruby $(2).
+
+    endef
+  endif
+
+  # Description
+  ifndef Package/ruby-$(1)/install
+    ifndef Package/ruby-$(1)/files
+       $$(error It must exists either a Package/ruby-$(1)/install or Package/ruby-$(1)/files)
+    endif
+
+    define Package/ruby-$(1)/description +=
+
+Provides:
+$(patsubst /%,
+ - /%,$(RUBY_FILES))
+
+    endef
+
+    ifneq ($(RUBY_FILES_EXCLUDED),)
+      define Package/ruby-$(1)/description +=
+
+Except:
+$(patsubst /%,
+ - /%,$(RUBY_FILES_EXCLUDED))
+
+      endef
+    endif
+
+    Package/ruby-$(1)/install=$(call RubyBuildPackage/install,$(1),$$(1))
+  endif
+
+  $$(eval $$(call BuildPackage,ruby-$(1)))
+endef
+
+$(eval $(call BuildPackage,ruby))
+$(eval $(call BuildPackage,libruby))
+$(eval $(call RubyBuildPackage,bigdecimal,Arbitrary-precision decimal floating-point library,))
+$(eval $(call RubyBuildPackage,cgi,CGI support toolkit,+ruby-filelib +ruby-pstore))
+$(eval $(call RubyBuildPackage,csv,CSV library,+ruby-patterns +ruby-datetime +ruby-enc))
+$(eval $(call RubyBuildPackage,datetime,date library))
+$(eval $(call RubyBuildPackage,dbm,support for dbm,+libdb47))
+$(eval $(call RubyBuildPackage,debuglib,debug library,+ruby-multithread +ruby-prettyprint))
+$(eval $(call RubyBuildPackage,did-you-mean,did you mean? experience,+ruby-misc))
+$(eval $(call RubyBuildPackage,digest,Digest Library,+RUBY_DIGEST_USE_OPENSSL:libopenssl))
+$(eval $(call RubyBuildPackage,drb,distributed object system,+ruby-filelib +ruby-patterns +ruby-socket))
+$(eval $(call RubyBuildPackage,enc,character re-coding library charset (small subset),))
+$(eval $(call RubyBuildPackage,enc-extra,character re-coding library charset (extra subset),+ruby-enc))
+$(eval $(call RubyBuildPackage,erb,(embedded interpreter),+ruby-cgi))
+$(eval $(call RubyBuildPackage,fiddle,libffi wrapper,+libffi))
+$(eval $(call RubyBuildPackage,filelib,file utils library,+ruby-enc +ruby-misc))
+$(eval $(call RubyBuildPackage,gdbm,support for gdbm,+libgdbm))
+$(eval $(call RubyBuildPackage,gems,gems packet management,+ruby-net +ruby-rdoc))
+$(eval $(call RubyBuildPackage,io-console,Console interface,))
+$(eval $(call RubyBuildPackage,irb,(interactive shell),+ruby-debuglib +ruby-filelib +ruby-math))
+$(eval $(call RubyBuildPackage,json,support for JSON,+ruby-datetime +ruby-misc))
+$(eval $(call RubyBuildPackage,logger,logger and syslog library,+ruby-multithread))
+$(eval $(call RubyBuildPackage,math,math library,+ruby-patterns))
+$(eval $(call RubyBuildPackage,minitest,Gem minitest,+ruby-gems))
+$(eval $(call RubyBuildPackage,misc,standard libraries subset (miscellaneous files),))
+$(eval $(call RubyBuildPackage,mkmf,makefile library,+ruby-filelib +ruby-optparse +ruby-rbconfig))
+$(eval $(call RubyBuildPackage,multithread,multithread library,+ruby-misc))
+$(eval $(call RubyBuildPackage,net,Network Protocols Library,+ruby-datetime +ruby-digest +ruby-filelib +ruby-uri))
+$(eval $(call RubyBuildPackage,net-telnet,telnet client,+ruby-net))
+$(eval $(call RubyBuildPackage,nkf,Network Kanji Filter,+ruby-enc))
+$(eval $(call RubyBuildPackage,openssl,support for openssl,+ruby-enc +ruby-multithread +libopenssl))
+$(eval $(call RubyBuildPackage,optparse,command-line option analysis,+ruby-misc))
+$(eval $(call RubyBuildPackage,patterns,design patterns implementation,+ruby-multithread))
+$(eval $(call RubyBuildPackage,powerassert,Gem power_assert,+ruby-ripper))
+$(eval $(call RubyBuildPackage,prettyprint,PrettyPrint library,+ruby-misc))
+$(eval $(call RubyBuildPackage,pstore,file based persistence,+ruby-digest +ruby-enc))
+$(eval $(call RubyBuildPackage,psych,YAML parser and emitter,+ruby-bigdecimal +ruby-datetime +ruby-misc +ruby-enc +libyaml))
+$(eval $(call RubyBuildPackage,racc,LALR parser generator,))
+$(eval $(call RubyBuildPackage,rake,Rake (make replacement),+ruby-datetime +ruby-filelib +ruby-optparse +ruby-patterns +ruby-rbconfig))
+$(eval $(call RubyBuildPackage,rbconfig,RbConfig,))
+$(eval $(call RubyBuildPackage,rdoc,documentation generator,+ruby-erb +ruby-irb +ruby-json +ruby-racc +ruby-rake +ruby-yaml +ruby-zlib))
+$(eval $(call RubyBuildPackage,readline,support for readline,+libncurses +libreadline))
+$(eval $(call RubyBuildPackage,rexml,XML toolkit,+ruby-patterns +ruby-enc))
+$(eval $(call RubyBuildPackage,rinda,Linda paradigm implementation,+ruby-drb))
+$(eval $(call RubyBuildPackage,ripper,script parser,))
+$(eval $(call RubyBuildPackage,rss,RSS toolkit,+ruby-net +ruby-nkf +ruby-rexml))
+$(eval $(call RubyBuildPackage,sdbm,simple file-based key-value dbm implementation,))
+$(eval $(call RubyBuildPackage,shell,idiomatic Ruby interface,+ruby-patterns))
+$(eval $(call RubyBuildPackage,socket,socket support,+ruby-multithread))
+$(eval $(call RubyBuildPackage,testunit,Gem test-unit,+ruby-csv +ruby-erb +ruby-optparse +ruby-powerassert +ruby-prettyprint +ruby-rexml +ruby-yaml))
+$(eval $(call RubyBuildPackage,unicodenormalize,String additions for Unicode normalization,+ruby-enc +ruby-enc-extra))
+$(eval $(call RubyBuildPackage,uri,library to handle URI,+ruby-socket +ruby-enc))
+$(eval $(call RubyBuildPackage,webrick,Web server toolkit,+ruby-erb +ruby-net +ruby-patterns +ruby-rbconfig))
+$(eval $(call RubyBuildPackage,xmlrpc,XML-RPC toolkit,+ruby-rexml +ruby-webrick))
+$(eval $(call RubyBuildPackage,yaml,YAML toolkit,+ruby-dbm +ruby-pstore +ruby-psych))
+$(eval $(call RubyBuildPackage,zlib,support for zlib,+zlib))
+$(eval $(call BuildPackage,ruby-stdlib))
+$(eval $(call HostBuild))
diff --git a/lang/ruby/files/ruby b/lang/ruby/files/ruby
new file mode 100644
index 0000000..e4904fc
--- /dev/null
+++ b/lang/ruby/files/ruby
@@ -0,0 +1,5 @@
+#!/bin/sh
+if ! [ -r "@RUBY_LIBPATH@/rubygems.rb" ]; then
+	exec @RUBY_BINPATH@ --disable-gems "$@"
+fi
+exec @RUBY_BINPATH@ "$@"
diff --git a/lang/ruby/patches/001-acinclude.m4_rename_aclocal.m4.patch b/lang/ruby/patches/001-acinclude.m4_rename_aclocal.m4.patch
new file mode 100644
index 0000000..271bd71
--- /dev/null
+++ b/lang/ruby/patches/001-acinclude.m4_rename_aclocal.m4.patch
@@ -0,0 +1,152 @@
+https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/53414
+
+Fixes:
+
+https://bugs.ruby-lang.org/issues/11941
+
+It might be incorporated in the following release
+
+Index: aclocal.m4
+===================================================================
+--- a/aclocal.m4	(revision 53413)
++++ b/aclocal.m4	(revision 53414)
+@@ -1,46 +0,0 @@
+-# -*- autoconf -*-
+-
+-AC_DEFUN([_COLORIZE_RESULT_PREPARE], [
+-    msg_checking= msg_result_yes= msg_result_no= msg_result_other= msg_reset=
+-    AS_IF([test "x${CONFIGURE_TTY}" = xyes -o -t 1], [
+-	msg_begin="`tput smso 2>/dev/null`"
+-    	AS_CASE(["$msg_begin"], ['@<:@'*m],
+-	    [msg_begin="`echo "$msg_begin" | sed ['s/[0-9]*m$//']`"
+-	    msg_checking="${msg_begin}33m"
+-	    AS_IF([test ${TEST_COLORS:+set}], [
+-		msg_result_yes=[`expr ":$TEST_COLORS:" : ".*:pass=\([^:]*\):"`]
+-		msg_result_no=[`expr ":$TEST_COLORS:" : ".*:fail=\([^:]*\):"`]
+-		msg_result_other=[`expr ":$TEST_COLORS:" : ".*:skip=\([^:]*\):"`]
+-	    ])
+-	    msg_result_yes="${msg_begin}${msg_result_yes:-32;1}m"
+-	    msg_result_no="${msg_begin}${msg_result_no:-31;1}m"
+-	    msg_result_other="${msg_begin}${msg_result_other:-33;1}m"
+-	    msg_reset="${msg_begin}m"
+-	    ])
+-	AS_UNSET(msg_begin)
+-	])
+-    AS_REQUIRE_SHELL_FN([colorize_result],
+-	[AS_FUNCTION_DESCRIBE([colorize_result], [MSG], [Colorize result])],
+-        [AS_CASE(["$[]1"],
+-            [yes], [AS_ECHO(["${msg_result_yes}$[]1${msg_reset}]")],
+-            [no], [AS_ECHO(["${msg_result_no}$[]1${msg_reset}]")],
+-            [AS_ECHO(["${msg_result_other}$[]1${msg_reset}]")])])
+-])
+-
+-AC_DEFUN([COLORIZE_RESULT], [AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
+-    AS_LITERAL_IF([$1],
+-	[m4_case([$1],
+-		[yes], [AS_ECHO(["${msg_result_yes}$1${msg_reset}"])],
+-		[no], [AS_ECHO(["${msg_result_no}$1${msg_reset}"])],
+-		[AS_ECHO(["${msg_result_other}$1${msg_reset}"])])],
+-	[colorize_result "$1"]) dnl
+-])
+-
+-AC_DEFUN([AC_CHECKING],[dnl
+-AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
+-AS_MESSAGE([checking ${msg_checking}$1${msg_reset}...])])
+-
+-AC_DEFUN([AC_MSG_RESULT], [dnl
+-{ _AS_ECHO_LOG([result: $1])
+-COLORIZE_RESULT([$1]); dnl
+-}])
+Index: acinclude.m4
+===================================================================
+--- a/acinclude.m4	(revision 0)
++++ b/acinclude.m4	(revision 53414)
+@@ -0,0 +1,46 @@
++# -*- autoconf -*-
++
++AC_DEFUN([_COLORIZE_RESULT_PREPARE], [
++    msg_checking= msg_result_yes= msg_result_no= msg_result_other= msg_reset=
++    AS_IF([test "x${CONFIGURE_TTY}" = xyes -o -t 1], [
++	msg_begin="`tput smso 2>/dev/null`"
++	AS_CASE(["$msg_begin"], ['@<:@'*m],
++	    [msg_begin="`echo "$msg_begin" | sed ['s/[0-9]*m$//']`"
++	    msg_checking="${msg_begin}33m"
++	    AS_IF([test ${TEST_COLORS:+set}], [
++		msg_result_yes=[`expr ":$TEST_COLORS:" : ".*:pass=\([^:]*\):"`]
++		msg_result_no=[`expr ":$TEST_COLORS:" : ".*:fail=\([^:]*\):"`]
++		msg_result_other=[`expr ":$TEST_COLORS:" : ".*:skip=\([^:]*\):"`]
++	    ])
++	    msg_result_yes="${msg_begin}${msg_result_yes:-32;1}m"
++	    msg_result_no="${msg_begin}${msg_result_no:-31;1}m"
++	    msg_result_other="${msg_begin}${msg_result_other:-33;1}m"
++	    msg_reset="${msg_begin}m"
++	    ])
++	AS_UNSET(msg_begin)
++	])
++    AS_REQUIRE_SHELL_FN([colorize_result],
++	[AS_FUNCTION_DESCRIBE([colorize_result], [MSG], [Colorize result])],
++        [AS_CASE(["$[]1"],
++            [yes], [AS_ECHO(["${msg_result_yes}$[]1${msg_reset}]")],
++            [no], [AS_ECHO(["${msg_result_no}$[]1${msg_reset}]")],
++            [AS_ECHO(["${msg_result_other}$[]1${msg_reset}]")])])
++])
++
++AC_DEFUN([COLORIZE_RESULT], [AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
++    AS_LITERAL_IF([$1],
++	[m4_case([$1],
++		[yes], [AS_ECHO(["${msg_result_yes}$1${msg_reset}"])],
++		[no], [AS_ECHO(["${msg_result_no}$1${msg_reset}"])],
++		[AS_ECHO(["${msg_result_other}$1${msg_reset}"])])],
++	[colorize_result "$1"]) dnl
++])
++
++AC_DEFUN([AC_CHECKING],[dnl
++AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
++AS_MESSAGE([checking ${msg_checking}$1${msg_reset}...])])
++
++AC_DEFUN([AC_MSG_RESULT], [dnl
++{ _AS_ECHO_LOG([result: $1])
++COLORIZE_RESULT([$1]); dnl
++}])
+
+Property changes on: acinclude.m4
+___________________________________________________________________
+Added: svn:eol-style
+## -0,0 +1 ##
++LF
+\ No newline at end of property
+Index: common.mk
+===================================================================
+--- a/common.mk	(revision 53413)
++++ b/common.mk	(revision 53414)
+@@ -518,7 +518,7 @@
+ 	$(Q)$(RM) id.c id.h probes.dmyh
+ 	$(Q)$(CHDIR) $(srcdir) && $(exec) $(RM) parse.c parse.h lex.c enc/trans/newline.c $(PRELUDES) revision.h
+ 	$(Q)$(CHDIR) $(srcdir) && $(exec) $(RM) id.c id.h probes.dmyh
+-	$(Q)$(CHDIR) $(srcdir) && $(exec) $(RM) configure tool/config.guess tool/config.sub gems/*.gem
++	$(Q)$(CHDIR) $(srcdir) && $(exec) $(RM) configure aclocal.m4 tool/config.guess tool/config.sub gems/*.gem
+ realclean-ext:: PHONY
+ realclean-golf: distclean-golf
+ 	$(Q)$(RM) $(GOLFPRELUDES)
+Index: Makefile.in
+===================================================================
+--- a/Makefile.in	(revision 53413)
++++ b/Makefile.in	(revision 53414)
+@@ -22,6 +22,7 @@
+ YACC = bison
+ PURIFY =
+ AUTOCONF = autoconf
++ACLOCAL = aclocal
+ CONFIGURE = @CONFIGURE@
+ @SET_MAKE@
+ MKFILES = @MAKEFILES@
+@@ -310,6 +311,9 @@
+ $(srcdir)/$(CONFIGURE): $(srcdir)/configure.in $(srcdir)/aclocal.m4
+ 	$(CHDIR) $(srcdir) && exec $(AUTOCONF) -o $(@F)
+ 
++$(srcdir)/aclocal.m4: $(srcdir)/acinclude.m4
++	$(CHDIR) $(srcdir) && exec $(ACLOCAL)
++
+ incs: id.h
+ all-incs: probes.h
+ 
diff --git a/lang/ruby/ruby_find_pkgsdeps b/lang/ruby/ruby_find_pkgsdeps
new file mode 100644
index 0000000..16f664a
--- /dev/null
+++ b/lang/ruby/ruby_find_pkgsdeps
@@ -0,0 +1,266 @@
+#!/usr/bin/ruby -Eutf-8
+# encoding: utf-8
+#
+# Find dependencies between ruby packages
+#
+# Must run inside a openwrt with all *ruby* packages installed
+#
+
+RUBY_SIMPLE_VERSION = RUBY_VERSION.split(".")[0..1].join(".")
+failed = false
+
+puts "Looking for installed ruby packages..."
+packages=`opkg list-installed '*ruby*' | cut -d' ' -f 1`.split("\n")
+
+puts "Looking for packages files..."
+package_files=Hash.new { |h,k| h[k]=[] }
+packages.each do
+	|pkg|
+	files=`opkg files "#{pkg}" | sed -e 1d`.split("\n")
+	package_files[pkg]=files if files
+end
+
+require_regex=/^require ["']([^"']+)["'].*/
+require_regex_ignore=/^require ([a-zA-Z\$]|["']$|.*\/$)/
+require_ignore=%w{drb/invokemethod16 foo rubygems/defaults/operating_system win32console java Win32API
+                  builder/xchar json/pure simplecov win32/sspi rdoc/markdown/literals_1_8 enumerator win32/resolv rbtree
+                  nqxml/streamingparser nqxml/treeparser xmlscan/parser xmlscan/scanner xmltreebuilder xml/parser xmlparser xml/encoding-ja xmlencoding-ja
+                  iconv uconv win32ole gettext/po_parser gettext/mo libxml psych.jar jar-dependencies}
+
+builtin_enc=[
+	Encoding.find("ASCII-8BIT"),
+	Encoding.find("UTF-8"),
+	Encoding.find("UTF-7"),
+	Encoding.find("US-ASCII"),
+]
+
+puts "Looking for requires in files..."
+files_requires=Hash.new { |h,k| h[k]=[] }
+packages.each do
+        |pkg|
+	package_files[pkg].each do
+		|file|
+		next if not File.file?(file)
+
+		if not file =~ /.rb$/
+			if File.executable?(file)
+				magic=`head -c50 '#{file}' | head -1`
+				begin
+					if not magic =~ /ruby/
+						next
+					end
+				rescue
+					next
+				end
+			else
+				next
+			end
+		end
+		#puts "Checking #{file}..."
+		File.open(file, "r") do
+			|f|
+			lineno=0
+			while line=f.gets() do
+				lineno+=1; encs=[]; requires=[]; need_encdb=false
+
+				line=line.chomp.gsub!(/^[[:blank:]]*/,"")
+
+				case line
+				when /^#.*coding *:/
+					if lineno <= 2
+						enc=line.sub(/.*coding *: */,"").sub(/ .*/,"")
+						encs << Encoding.find(enc)
+					end
+				end
+				line.gsub!(/#.*/,"")
+				case line
+				when "__END__"
+					break
+				when /^require /
+					#puts "#{file}:#{line}"
+					if require_regex_ignore =~ line
+						#puts "Ignoring #{line} at #{file}:#{lineno} (REGEX)..."
+						next
+					end
+					if not require_regex =~ line
+						$stderr.puts "Unknown require: '#{line}' at file #{file}:#{lineno}"
+						failed=true
+					end
+					require=line.gsub(require_regex,"\\1")
+					require.gsub!(/\.(so|rb)$/,"")
+
+					if require_ignore.include?(require)
+						#puts "Ignoring #{line} at #{file}:#{lineno} (STR)..."
+						next
+					end
+
+					files_requires[file] += [require]
+
+				when /Encoding::/
+					encs=line.scan(/Encoding::[[:alnum:]_]+/).collect {|enc| eval(enc) }.select {|enc| enc.kind_of? Encoding }
+					need_encdb=true
+				end
+
+				next if encs.empty?
+				required_encs = (encs - builtin_enc).collect {|enc| "enc/#{enc.name.downcase.gsub("-","_")}" }
+				required_encs << "enc/encdb" if need_encdb
+
+				files_requires[file] += required_encs
+			end
+		end
+	end
+end
+exit(1) if failed
+
+# Add deps from .so
+package_files.each do |(pkg,files)| files.each do |file|
+	case file
+	when /\/nkf\.so$/
+		files_requires[file]= files_requires[file] + ["enc/encdb"]
+	end
+end; end
+
+puts "Grouping package requirements per package"
+package_requires_files = Hash.new{|h,k| h[k] = Hash.new { |h2,k2| h2[k2] = [] } }
+package_files.each do |(pkg,files)|
+	package_requires_files[pkg]
+	files.each do |file|
+		files_requires[file].each do |requires|
+			package_requires_files[pkg][requires] << file
+		end
+	end
+end
+
+weak_dependency=Hash.new { |h,k| h[k]=[] }
+weak_dependency.merge!({
+"ruby-misc"=>["ruby-openssl","ruby-fiddle"],			#securerandom.rb
+"ruby-debuglib"=>["ruby-readline"],				#debug.rb
+"ruby-drb"=>["ruby-openssl"],				 	#drb/ssl.rb
+"ruby-irb"=>["ruby-rdoc", "ruby-readline"],		 	#irb/cmd/help.rb
+"ruby-gems"=>["ruby-openssl","ruby-io-console","ruby-webrick"], #rubygems/commands/cert_command.rb rubygems/user_interaction.rb rubygems/server.rb
+"ruby-mkmf"=>["ruby-webrick"], 					#un.rb
+"ruby-net"=>["ruby-openssl","ruby-io-console","ruby-zlib"], 	#net/*.rb
+"ruby-optparse"=>["ruby-uri","ruby-datetime"],			#optparse/date.rb optparse/uri.rb
+"ruby-rake"=>["ruby-net","ruby-gems"],				#rake/contrib/ftptools.rb /usr/bin/rake
+"ruby-rdoc"=>["ruby-gems","ruby-readline","ruby-webrick",	#/usr/bin/rdoc and others
+	       "ruby-io-console"],				#rdoc/stats/normal.rb
+"ruby-webrick"=>["ruby-openssl"],				#webrick/ssl.rb
+"ruby-testunit"=>["ruby-io-console"],			 	#gems/test-unit-3.1.5/lib/test/unit/ui/console/testrunner.rb
+})
+
+puts "Preloading gems..."
+Gem::Specification.all.each{ |x| gem x.name }
+
+puts "Looking for package dependencies..."
+package_provides = {}
+package_dependencies = Hash.new { |h,k| h[k]=[] }
+package_requires_files.each do
+	|(pkg,requires_files)|
+
+	requires_files.each do
+		|(require,files)|
+		if package_provides.include?(require)
+			found = package_provides[require]
+		else
+			found = package_files.detect {|(pkg,files)| files.detect {|file| $:.detect {|path| "#{path}/#{require}" == file.gsub(/\.(so|rb)$/,"") } } }
+			if not found
+				$stderr.puts "#{pkg}: Nothing provides #{require}"
+				failed = true
+				next
+			end
+			found = found.first
+			package_provides[require] = found
+		end
+		if weak_dependency[pkg].include?(found)
+			puts "#{pkg}: #{found} provides #{require} (weak depedendency ignored)"
+		else
+			puts "#{pkg}: #{found} provides #{require} for #{files.collect {|file| file.sub("/usr/lib/ruby/","") }.join(",")}"
+			package_dependencies[pkg] += [found]
+		end
+	end
+end
+if failed
+	puts "There is some missing requirements not mapped to files in packages."
+	puts "Please, fix the missing files or ignore them on require_ignore var"
+	exit(1)
+end
+# Remove self dependency
+package_dependencies = Hash[package_dependencies.collect {|(pkg,deps)| [pkg,package_dependencies[pkg]=deps.uniq.sort - [pkg]]}]
+package_dependencies.default = []
+
+puts "Expanding dependencies..."
+begin
+	changed=false
+	package_dependencies.each do
+		|(pkg,deps)|
+		next if deps.empty?
+		deps_new = deps.collect {|dep| [dep] + package_dependencies[dep] }.inject([],:+).uniq.sort
+		if not deps == deps_new
+			puts "#{pkg}: #{deps.join(",")}"
+			puts "#{pkg}: #{deps_new.join(",")}"
+			package_dependencies[pkg]=deps_new
+			changed=true
+		end
+	end
+end if not changed
+
+puts "Removing redundant dependencies..."
+package_dependencies.each do
+	|(pkg,deps)|
+	package_dependencies[pkg]=deps.uniq - [pkg]
+end
+
+puts "Checking for mutual dependencies..."
+package_dependencies.each do
+	|(pkg,deps)|
+	if deps.include? pkg
+		$stderr.puts "#{pkg}: Cycle dependency detected! "
+		failed = true
+	end
+end
+exit(1) if failed
+
+
+package_dependencies2=package_dependencies.dup
+package_dependencies.each do
+	|(pkg,deps)|
+
+	# Ignore dependencies that are already required by another dependency
+	deps_clean = deps.reject {|dep_suspect| deps.detect {|dep_provider|
+			if package_dependencies[dep_provider].include?(dep_suspect)
+				puts "#{pkg}: #{dep_suspect} is already required by #{dep_provider}"
+				true
+			end
+		 } }
+
+	if not deps==deps_clean
+		puts "before: #{deps.join(",")}"
+		puts "after: #{deps_clean.join(",")}"
+		package_dependencies2[pkg]=deps_clean
+	end
+end
+package_dependencies=package_dependencies2
+
+puts "Checking current packages dependencies..."
+ok=true
+package_dependencies.each do
+	|(pkg,deps)|
+	current_deps=`opkg depends #{pkg} | sed -r -e '1d;s/^[[:blank:]]*//'`.split("\n")
+	current_deps.reject!{|dep| dep =~ /^lib/ }
+	current_deps -= ["ruby"]
+
+	extra_dep = current_deps - deps
+	$stderr.puts "Package #{pkg} does not need to depend on #{extra_dep.join(" ")} " if not extra_dep.empty?
+	missing_dep = deps - current_deps
+	$stderr.puts "Package #{pkg} needs to depend on #{missing_dep.join(" ")} " if not missing_dep.empty?
+
+	if not extra_dep.empty? or not missing_dep.empty?
+		$stderr.puts "define Package/#{pkg}"
+		$stderr.puts "  DEPENDS:=ruby#{([""] +deps).join(" +")}"
+		ok=false
+	end
+end
+
+puts "All dependencies are OK." if ok
+
+__END__
diff --git a/lang/ruby/ruby_missingfiles b/lang/ruby/ruby_missingfiles
new file mode 100644
index 0000000..e23b73d
--- /dev/null
+++ b/lang/ruby/ruby_missingfiles
@@ -0,0 +1,28 @@
+#!/bin/bash
+#
+# bash feeds/packages/lang/ruby/ruby_missingfiles staging_dir/target-i386_i486_musl-1.1.11/ bin/x86/packages/packages/*ruby*_2.3.0*
+#
+
+function list_staging_files {
+	cd "$1"; find \
+		\( \( -name "root-x86" -or -name "packages" -or -name "stamp" -or -name "pkginfo" \) -prune \) -or -true \
+		\( -path "*ruby*" -or -name "erb" -or -name "gem" -or -name "irb" -or -name "rake" -or -name "rdoc" -or -name "ri" -or -name "testrb" \) \
+		-not -path "*/usr/include/*" -not -path "*/usr/lib/pkgconfig/*" -not -path "*/usr/lib/lib*.a" \
+		-not -path "*/usr/lib/ruby/gems/*/cache/*" \
+		-print | sort
+}
+
+function list_ipkg_files {
+	for OPKG; do
+        tar --to-stdout -xzf "$OPKG" ./data.tar.gz | tar tz | sed -e 's%/$%%'
+	done | sort -u
+}
+
+
+echo "                          Staging                                             Packages"
+
+: ${1:?First arg is staging_dir}
+: ${2:?Second and following args are ruby ipkg packages}
+STAGING_DIR=$1; shift
+diff -d -y <(list_staging_files "$STAGING_DIR") <(list_ipkg_files "$@")
+
diff --git a/utils/compass/Makefile b/utils/compass/Makefile
deleted file mode 100644
index 50b44a3..0000000
--- a/utils/compass/Makefile
+++ /dev/null
@@ -1,28 +0,0 @@
-#
-## Copyright (C) 2019 CZ.NIC z.s.p.o. (http://www.nic.cz/)
-#
-## This is free software, licensed under the GNU General Public License v2.
-# See /LICENSE for more information.
-# #
-#
-include $(TOPDIR)/rules.mk
-
-PKG_NAME:=compass
-PKG_VERSION:=1.0.3
-PKG_RELEASE:=1
-PKG_MAINTAINER:=CZ.NIC <packaging@turris.cz>
-
-HOST_BUILD_DEPENDS:=ruby/host
-
-include $(INCLUDE_DIR)/host-build.mk
-include $(INCLUDE_DIR)/package.mk
-
-Build/Compile:=:
-Host/Compile:=:
-
-define Host/Install
-	$(STAGING_DIR_HOSTPKG)/bin/gem install compass -v $(PKG_VERSION)
-endef
-
-$(eval $(call HostBuild))
-$(eval $(call Build/DefaultTargets))
diff --git a/web/foris/foris/Makefile b/web/foris/foris/Makefile
index 4397bd9..3316e7c 100644
--- a/web/foris/foris/Makefile
+++ b/web/foris/foris/Makefile
@@ -23,9 +23,7 @@ HOST_PYTHON3_PACKAGE_BUILD_DEPENDS:= \
 	libsass==0.14.5 \
 	MarkupSafe==1.1.1 \
 	Jinja2==2.10
-PKG_BUILD_DEPENDS:= \
-	compass/host \
-	ruby-breakpoint/host
+PKG_BUILD_DEPENDS:=ruby/host
 
 include $(INCLUDE_DIR)/package.mk
 include $(TOPDIR)/feeds/packages/lang/python/python3-package.mk
-- 
2.24.0


From f31b962402443c5a741034564024803f9d45012b Mon Sep 17 00:00:00 2001
From: Josef Schlehofer <pepe.schlehofer@gmail.com>
Date: Mon, 12 Apr 2021 02:12:01 +0200
Subject: [PATCH] mariadb: remove this package from this feed

A few months ago, Michal become maintainer of mariadb in packages feed
and we do not longer to ship our variant or forked version of mariadb.
Let's drop it and use upstream one
---
 utils/mariadb/Makefile                        | 559 ------------------
 utils/mariadb/files/my.cnf                    |  99 ----
 utils/mariadb/files/mysqld.init               |  77 ---
 utils/mariadb/patches/100-fix_hostname.patch  |  11 -
 utils/mariadb/patches/110-pcre.cmake.patch    |  11 -
 .../patches/140-mips-connect-unaligned.patch  | 262 --------
 utils/mariadb/patches/160-mips-machine.patch  |  25 -
 .../mariadb/patches/170-no-uint-in-pam.patch  |  11 -
 utils/mariadb/patches/180-c11_atomics.patch   |  64 --
 utils/mariadb/patches/expand-localhost.patch  |  16 -
 utils/mariadb/patches/no-socket-auth.patch    |  30 -
 11 files changed, 1165 deletions(-)
 delete mode 100644 utils/mariadb/Makefile
 delete mode 100644 utils/mariadb/files/my.cnf
 delete mode 100644 utils/mariadb/files/mysqld.init
 delete mode 100644 utils/mariadb/patches/100-fix_hostname.patch
 delete mode 100644 utils/mariadb/patches/110-pcre.cmake.patch
 delete mode 100644 utils/mariadb/patches/140-mips-connect-unaligned.patch
 delete mode 100644 utils/mariadb/patches/160-mips-machine.patch
 delete mode 100644 utils/mariadb/patches/170-no-uint-in-pam.patch
 delete mode 100644 utils/mariadb/patches/180-c11_atomics.patch
 delete mode 100644 utils/mariadb/patches/expand-localhost.patch
 delete mode 100644 utils/mariadb/patches/no-socket-auth.patch

diff --git a/utils/mariadb/Makefile b/utils/mariadb/Makefile
deleted file mode 100644
index 26564f524..000000000
--- a/utils/mariadb/Makefile
+++ /dev/null
@@ -1,559 +0,0 @@
-#
-# Copyright (C) 2018 Sebastian Kemper <sebastian_ml@gmx.net>
-#
-# This is free software, licensed under the GNU General Public License v2.
-# See /LICENSE for more information.
-#
-
-include $(TOPDIR)/rules.mk
-
-PKG_NAME:=mariadb
-PKG_VERSION:=10.4.20
-PKG_RELEASE:=1
-
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL := \
-	https://mirror.netcologne.de/mariadb/$(PKG_NAME)-$(PKG_VERSION)/source \
-	https://mirror.lstn.net/mariadb/$(PKG_NAME)-$(PKG_VERSION)/source \
-	https://ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/$(PKG_NAME)-$(PKG_VERSION)/source \
-	https://downloads.mariadb.org/interstitial/$(PKG_NAME)-$(PKG_VERSION)/source
-
-PKG_HASH:=87d5e29ee1f18de153266ec658138607703ed2a05b3ffb1f89091d33f4abf545
-
-PKG_MAINTAINER:=CZ.NIC <packaging@turris.cz>
-PKG_LICENSE:=GPL-2.0-or-later
-PKG_LICENSE_FILES:=COPYING
-
-HOST_BUILD_PARALLEL:=1
-PKG_BUILD_PARALLEL:=1
-PKG_USE_MIPS16:=0
-PKG_ASLR_PIE:=0
-
-HOST_BUILD_DEPENDS:=libxml2/host
-# Without libevent2 tests/async_queries sporadically fails on the bots
-PKG_BUILD_DEPENDS:=libevent2 mariadb/host
-
-CMAKE_INSTALL:=1
-
-PLUGIN_DIR:=/usr/lib/mariadb/plugin
-
-MARIADB_COMMON_DEPENDS := \
-	+libatomic \
-	+libopenssl \
-	+libstdcpp \
-	+zlib
-
-MARIADB_DISABLE_ENGINES := \
-	rocksdb \
-
-MARIADB_SERVER_PLUGINS := \
-	adt_null \
-	auth_0x0100 \
-	auth_ed25519 \
-	auth_socket \
-	auth_test_plugin \
-	client_ed25519 \
-	debug_key_management \
-	dialog_examples \
-	disks \
-	example_key_management \
-	feedback \
-	file_key_management \
-	ha_archive \
-	ha_blackhole \
-	ha_connect \
-	ha_example \
-	ha_federated \
-	ha_federatedx \
-	ha_sequence \
-	ha_sphinx \
-	ha_spider \
-	ha_test_sql_discovery \
-	handlersocket \
-	libdaemon_example \
-	locales \
-	metadata_lock_info \
-	mypluglib \
-	qa_auth_client \
-	qa_auth_interface \
-	qa_auth_server \
-	query_cache_info \
-	query_response_time \
-	server_audit \
-	simple_password_check \
-	sql_errlog \
-	wsrep_info
-
-PKG_CONFIG_DEPENDS := \
-	$(patsubst %,CONFIG_PACKAGE_$(PKG_NAME)-server-plugin-%,$(subst _,-,$(MARIADB_SERVER_PLUGINS))) \
-	CONFIG_PACKAGE_mariadb-server
-
-plugin-adt_null                 := PLUGIN_AUDIT_NULL
-plugin-auth_0x0100              := PLUGIN_AUTH_0X0100
-plugin-auth_ed25519             := PLUGIN_AUTH_ED25519
-plugin-auth_socket              := PLUGIN_AUTH_SOCKET
-plugin-auth_test_plugin         := PLUGIN_AUTH_TEST_PLUGIN
-plugin-client_ed25519           := PLUGIN_CLIENT_ED25519
-plugin-debug_key_management     := PLUGIN_DEBUG_KEY_MANAGEMENT
-plugin-dialog_examples          := PLUGIN_DIALOG_EXAMPLES
-plugin-disks                    := PLUGIN_DISKS
-plugin-example_key_management   := PLUGIN_EXAMPLE_KEY_MANAGEMENT
-plugin-feedback                 := PLUGIN_FEEDBACK
-plugin-file_key_management      := PLUGIN_FILE_KEY_MANAGEMENT
-plugin-ha_archive               := PLUGIN_ARCHIVE
-plugin-ha_blackhole             := PLUGIN_BLACKHOLE
-plugin-ha_connect               := PLUGIN_CONNECT
-plugin-ha_example               := PLUGIN_EXAMPLE
-plugin-ha_federated             := PLUGIN_FEDERATED
-plugin-ha_federatedx            := PLUGIN_FEDERATEDX
-plugin-ha_sequence              := PLUGIN_SEQUENCE
-plugin-ha_sphinx                := PLUGIN_SPHINX
-plugin-ha_spider                := PLUGIN_SPIDER
-plugin-ha_test_sql_discovery    := PLUGIN_TEST_SQL_DISCOVERY
-plugin-handlersocket            := PLUGIN_HANDLERSOCKET
-plugin-libdaemon_example        := PLUGIN_DAEMON_EXAMPLE
-plugin-locales                  := PLUGIN_LOCALES
-plugin-metadata_lock_info       := PLUGIN_METADATA_LOCK_INFO
-plugin-mypluglib                := PLUGIN_FTEXAMPLE
-plugin-qa_auth_client           := PLUGIN_QA_AUTH_CLIENT
-plugin-qa_auth_interface        := PLUGIN_QA_AUTH_INTERFACE
-plugin-qa_auth_server           := PLUGIN_QA_AUTH_SERVER
-plugin-query_cache_info         := PLUGIN_QUERY_CACHE_INFO
-plugin-query_response_time      := PLUGIN_QUERY_RESPONSE_TIME
-plugin-server_audit             := PLUGIN_SERVER_AUDIT
-plugin-simple_password_check    := PLUGIN_SIMPLE_PASSWORD_CHECK
-plugin-sql_errlog               := PLUGIN_SQL_ERRLOG
-plugin-wsrep_info               := PLUGIN_WSREP_INFO
-
-MARIADB_CLIENT := \
-	mysql \
-	mysqlcheck
-
-MARIADB_CLIENT_EXTRA := \
-	mysql_find_rows \
-	mysql_waitpid \
-	mysqlaccess \
-	mysqladmin \
-	mysqldump \
-	mysqlimport \
-	mysqlshow \
-	mysqlslap \
-	mytop
-
-MARIADB_SERVER := \
-	innochecksum \
-	my_print_defaults \
-	mysql_install_db \
-	mysql_upgrade \
-	mysqld
-
-MARIADB_SERVER_EXTRA := \
-	aria* \
-	mariabackup \
-	msql2mysql \
-	myisam_ftdump \
-	myisamchk \
-	myisamlog \
-	myisampack \
-	mysql_convert_table_format \
-	mysql_fix_extensions \
-	mysql_plugin \
-	mysql_secure_installation \
-	mysql_setpermission \
-	mysql_tzinfo_to_sql \
-	mysqlbinlog \
-	mysqld_multi \
-	mysqld_safe \
-	mysqld_safe_helper \
-	mysqldumpslow \
-	mysqlhotcopy \
-	perror \
-	replace \
-	resolve_stack_dump
-
-include $(INCLUDE_DIR)/package.mk
-include $(INCLUDE_DIR)/host-build.mk
-include $(INCLUDE_DIR)/cmake.mk
-
-#Â Pass CPPFLAGS in the CFLAGS as otherwise the build system will
-# ignore them.
-TARGET_CFLAGS+=$(TARGET_CPPFLAGS)
-
-define Package/mariadb/install/bin
-	if [ -f $(PKG_INSTALL_DIR)/usr/bin/$(2) ]; then\
-		$(INSTALL_DIR) $(1)/usr/bin;\
-		$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/$(2) $(1)/usr/bin;\
-	else \
-		$(INSTALL_DIR) $(1)/usr/sbin;\
-		$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/sbin/$(2) $(1)/usr/sbin;\
-	fi
-endef
-
-define Package/mariadb/description/Default
-MariaDB is a fast, stable and true multi-user, multi-threaded SQL
-database server. SQL (Structured Query Language) is the most popular
-database query language in the world. The main goals of MariaDB are
-speed, robustness and ease of use.
-endef
-
-define Package/libmariadbclient
-  SECTION:=libs
-  CATEGORY:=Libraries
-  DEPENDS:=$(MARIADB_COMMON_DEPENDS)
-  TITLE:=MariaDB database client library
-  URL:=https://mariadb.org/
-  PROVIDES:=libmysqlclient libmysqlclient-r
-endef
-
-define Package/libmariadbclient/description
-$(call Package/mariadb/description/Default)
-
-This package includes the client library.
-
-endef
-
-define Package/mariadb/Default
-  SECTION:=utils
-  CATEGORY:=Utilities
-  URL:=https://mariadb.org/
-  SUBMENU:=database
-endef
-
-define Package/mariadb-client
-  $(call Package/mariadb/Default)
-  TITLE:=MariaDB database core client binaries
-  DEPENDS:= \
-	  $(MARIADB_COMMON_DEPENDS) \
-	  +libncursesw \
-	  +libedit
-endef
-
-define Package/mariadb-client/description
-$(call Package/mariadb/description/Default)
-
-This package includes the following core client binaries:
-
-$(subst $(space),$(newline),$(MARIADB_CLIENT))
-
-endef
-
-define Package/mariadb-client-extra
-  $(call Package/mariadb/Default)
-  TITLE:=MariaDB database extra client binaries
-  DEPENDS:=mariadb-client
-endef
-
-define Package/mariadb-client-extra/description
-$(call Package/mariadb/description/Default)
-
-This package includes the following extra client binaries:
-
-$(subst $(space),$(newline),$(MARIADB_CLIENT_EXTRA))
-
-endef
-
-define Package/mariadb-extra-charsets
-  $(call Package/mariadb/Default)
-  TITLE:=MariaDB database extra character sets
-  DEPENDS:=mariadb-server
-endef
-
-define Package/mariadb-extra-charsets/description
-$(call Package/mariadb/description/Default)
-
-The MariaDB server packaged by OpenWrt only provides support for UTF-8.
-This package contains single Byte character sets and collations that can
-be added at run time.
-
-endef
-
-define Package/mariadb-server
-  $(call Package/mariadb/Default)
-  DEPENDS:= \
-	  $(MARIADB_COMMON_DEPENDS) \
-	  +!arc:libaio \
-	  +liblzma \
-	  +libbz2 \
-	  +liblzo \
-	  +liblz4 \
-	  +libpcre \
-	  +resolveip
-  TITLE:=MariaDB database core server binaries
-  MENU:=1
-  PROVIDES:=mysql-server
-  USERID:=mysql=6446:mysql=6446
-endef
-
-define Package/mariadb-server/description
-$(call Package/mariadb/description/Default)
-
-This package includes the following core server binaries:
-
-$(subst $(space),$(newline),$(MARIADB_SERVER))
-
-endef
-
-define Package/mariadb-server-extra
-  $(call Package/mariadb/Default)
-  TITLE:=MariaDB database extra server binaries
-  DEPENDS:=mariadb-server
-endef
-
-define Package/mariadb-server-extra/description
-$(call Package/mariadb/description/Default)
-
-This package includes the following extra server binaries:
-
-$(subst $(space),$(newline),$(MARIADB_SERVER_EXTRA))
-
-endef
-
-# We won't need unit tests
-CMAKE_OPTIONS += -DWITH_UNIT_TESTS=0
-
-# This value is determined automatically during straight compile by compiling
-# and running a test code. You cannot do that during cross-compile. However the
-# stack grows downward in most if not all modern systems. The only exception
-# according to buildroot is PA-RISC which is not supported by OpenWrt as far as
-# I know. Therefore it makes sense to hardcode the value. If an arch is added
-# the stack of which grows up one should expect unpredictable behavior at run
-# time.
-CMAKE_OPTIONS += -DSTACK_DIRECTION=-1
-
-# Jemalloc was added for TokuDB. Since its configure script seems somewhat broken
-# when it comes to cross-compilation we shall disable it and also disable TokuDB.
-CMAKE_OPTIONS += -DWITH_JEMALLOC=no -DWITHOUT_TOKUDB=1
-
-# Make it explicit that we are cross-compiling
-CMAKE_OPTIONS += -DCMAKE_CROSSCOMPILING=1
-
-# Explicitly disable dtrace to avoid detection of a host version
-CMAKE_OPTIONS += -DENABLE_DTRACE=0
-
-# Prevent mariadb from messing with OpenWrt's C(XX)FLAGS
-CMAKE_OPTIONS += -DSECURITY_HARDENED=OFF
-
-ifeq ($(CONFIG_PACKAGE_mariadb-server),)
-CMAKE_OPTIONS += -DWITHOUT_SERVER=ON
-else
-CMAKE_OPTIONS += -DWITHOUT_SERVER=OFF
-endif
-
-CMAKE_OPTIONS += \
-	-DCONNECT_WITH_JDBC=NO \
-	-DCONNECT_WITH_LIBXML2=system \
-	-DCONNECT_WITH_ODBC=NO \
-	-DDEFAULT_CHARSET=utf8 \
-	-DDEFAULT_COLLATION=utf8_general_ci \
-	-DDISABLE_SHARED=NO \
-	-DENABLED_PROFILING=OFF \
-	-DENABLE_STATIC_LIBS=OFF \
-    -DINSTALL_MYSQLSHAREDIR=share/mariadb \
-    -DINSTALL_LAYOUT=RPM \
-    -DINSTALL_PLUGINDIR=lib/mariadb/plugin \
-    -DINSTALL_MYSQLDATADIR=/srv/mysql \
-    -DINSTALL_UNIX_ADDRDIR=/var/run/mysql/mysql.sock
-	-DSKIP_TESTS=ON \
-	-DWITH_ASAN=OFF \
-	-DWITH_EMBEDDED_SERVER=OFF \
-	-DWITH_EXTRA_CHARSETS=none \
-	-DWITH_INNODB_BZIP2=OFF \
-	-DWITH_INNODB_LZ4=OFF \
-	-DWITH_INNODB_LZMA=ON \
-	-DWITH_INNODB_LZO=ON \
-	-DWITH_INNODB_SNAPPY=OFF \
-	-DWITH_LIBEDIT=OFF \
-	-DWITH_LIBNUMA=NO \
-	-DWITH_LIBWRAP=OFF \
-	-DWITH_LIBWSEP=OFF \
-	-DWITH_MARIABACKUP=ON \
-	-DWITH_PCRE=system \
-	-DWITH_READLINE=OFF \
-	-DWITH_SAFEMALLOC=OFF \
-	-DWITH_SSL=system \
-	-DWITH_SYSTEMD=no \
-	-DWITH_VALGRIND=OFF \
-	-DWITH_ZLIB=system
-
-# Default-disable some modules
-CMAKE_OPTIONS += \
-	-DPLUGIN_CASSANDRA=OFF \
-	-DPLUGIN_OQGRAPH=OFF \
-	-DPLUGIN_TOKUDB=OFF \
-	-DPLUGIN_AUTH_PAM=NO \
-	-DPLUGIN_AUTH_GSSAPI=NO \
-	-DPLUGIN_AUTH_GSSAPI_CLIENT=OFF \
-	-DPLUGIN_CRACKLIB_PASSWORD_CHECK=OFF
-
-CMAKE_OPTIONS += \
-	$(foreach p,$(MARIADB_SERVER_PLUGINS),-D$(plugin-$(p))=$(if $(CONFIG_PACKAGE_$(PKG_NAME)-server-plugin-$(subst _,-,$(p))),DYNAMIC,OFF))
-
-# Set CMAKE_FIND_ROOT_PATH_MODE_INCLUDE and CMAKE_FIND_ROOT_PATH_MODE_LIBRARY
-# to BOTH as otherwise the host build will not find some required dependencies
-# installed on the host machine, like ncurses.
-#
-# Add "$(STAGING_DIR_HOSTPKG)/lib" to the RPATH of the host helpers,
-# otherwise they might not find the location of a library at run time.
-CMAKE_HOST_OPTIONS += \
-	-DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE \
-	-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=BOTH \
-	-DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=BOTH \
-	-DCMAKE_INSTALL_RPATH="$(STAGING_DIR_HOSTPKG)/lib" \
-	-DCMAKE_SKIP_RPATH=FALSE \
-	-DWITHOUT_SERVER=OFF \
-	-DWITHOUT_TOKUDB=1
-
-# Some helpers must be compiled for host in order to crosscompile mariadb for
-# the target. They are then included by import_executables.cmake which is
-# generated during the build of the host helpers. It is not necessary to build
-# the whole host package, only the "import_executables" target.
-# -DIMPORT_EXECUTABLES=$(HOST_BUILD_DIR)/import_executables.cmake
-# must then be passed to cmake during target build.
-# See also https://mariadb.com/kb/en/mariadb/cross-compiling-mariadb/
-
-CMAKE_OPTIONS += -DIMPORT_EXECUTABLES=$(STAGING_DIR_HOSTPKG)/share/mariadb/import_executables.cmake
-
-define Host/Compile
-	$(call Host/Compile/Default,import_executables)
-endef
-
-define Host/Install
-	$(SED) 's|$(HOST_BUILD_DIR)|$(STAGING_DIR_HOSTPKG)/share/mariadb|' $(HOST_BUILD_DIR)/import_executables.cmake
-	$(INSTALL_DIR) $(1)/share/mariadb/{dbug,extra,scripts,sql}
-	$(INSTALL_BIN) $(HOST_BUILD_DIR)/dbug/factorial $(1)/share/mariadb/dbug
-	$(INSTALL_BIN) $(HOST_BUILD_DIR)/extra/comp_err $(1)/share/mariadb/extra
-	$(INSTALL_BIN) $(HOST_BUILD_DIR)/scripts/comp_sql $(1)/share/mariadb/scripts
-	$(INSTALL_BIN) $(HOST_BUILD_DIR)/sql/{gen_lex_hash,gen_lex_token} $(1)/share/mariadb/sql
-	$(INSTALL_DATA) $(HOST_BUILD_DIR)/import_executables.cmake $(1)/share/mariadb
-endef
-
-define Build/InstallDev
-	$(INSTALL_DIR) $(2)/bin $(1)/usr/bin $(1)/usr/include $(1)/usr/lib $(1)/usr/lib/pkgconfig $(1)/usr/share/aclocal
-	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/mysql_config $(1)/usr/bin
-	$(LN) $(STAGING_DIR)/usr/bin/mysql_config $(2)/bin
-	$(CP) $(PKG_INSTALL_DIR)/usr/include/mysql $(1)/usr/include
-	$(CP) $(PKG_INSTALL_DIR)/usr/lib*/libmysqlclient*.so* $(1)/usr/lib
-	$(CP) $(PKG_INSTALL_DIR)/usr/lib*/libmaria*.so* $(1)/usr/lib
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/lib*/pkgconfig/*mariadb.pc $(1)/usr/lib/pkgconfig
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/aclocal/mysql.m4 $(1)/usr/share/aclocal
-endef
-
-define Package/libmariadbclient/install
-	$(INSTALL_DIR) $(1)$(PLUGIN_DIR)
-	$(CP) $(PKG_INSTALL_DIR)/usr/lib*/libmysqlclient*.so* $(1)/usr/lib
-	$(CP) $(PKG_INSTALL_DIR)/usr/lib*/libmaria*.so* $(1)/usr/lib
-
-	$(INSTALL_BIN) $(PKG_INSTALL_DIR)$(PLUGIN_DIR)/dialog.so $(1)$(PLUGIN_DIR)
-	$(INSTALL_BIN) $(PKG_INSTALL_DIR)$(PLUGIN_DIR)/mysql_clear_password.so $(1)$(PLUGIN_DIR)
-endef
-
-define Package/mariadb-client/install
-	$(foreach b,$(MARIADB_CLIENT),$(call Package/mariadb/install/bin,$(1),$(b));)
-	# Install convenience links for mysqlcheck multi-call binary
-	cd $(1)/usr/bin; $(LN) mysqlcheck mysqlanalyze
-	cd $(1)/usr/bin; $(LN) mysqlcheck mysqlrepair
-	cd $(1)/usr/bin; $(LN) mysqlcheck mysqloptimize
-endef
-
-define Package/mariadb-client-extra/install
-	$(foreach b,$(MARIADB_CLIENT_EXTRA),$(call Package/mariadb/install/bin,$(1),$(b));)
-endef
-
-define Package/mariadb-extra-charsets/install
-	$(INSTALL_DIR) $(1)/usr/share/mariadb/charsets
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/charsets/* $(1)/usr/share/mariadb/charsets
-endef
-
-define Package/mariadb-server/install
-	$(foreach b,$(MARIADB_SERVER),$(call Package/mariadb/install/bin,$(1),$(b));)
-	$(INSTALL_DIR) $(1)/etc/init.d
-	$(INSTALL_BIN) files/mysqld.init $(1)/etc/init.d/mysqld
-	# DATA because spomebody thought giving CONF 0600 rights is a good idea
-	$(INSTALL_DATA) files/my.cnf $(1)/etc/my.cnf
-	$(INSTALL_DIR) $(1)$(PLUGIN_DIR)
-	# DATA because spomebody thought giving CONF 0600 rights is a good idea
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)$(PLUGIN_DIR)/daemon_example.ini $(1)$(PLUGIN_DIR)
-	$(INSTALL_DIR) $(1)/usr/share/mariadb/english
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/english/errmsg.sys $(1)/usr/share/mariadb/english
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/fill_help_tables.sql $(1)/usr/share/mariadb
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/maria_add_gis_sp_bootstrap.sql $(1)/usr/share/mariadb
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/mysql_performance_tables.sql $(1)/usr/share/mariadb
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/mysql_system_tables.sql $(1)/usr/share/mariadb
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/mysql_system_tables_data.sql $(1)/usr/share/mariadb
-	$(INSTALL_DATA) $(PKG_INSTALL_DIR)/usr/share/mariadb/mysql_test_db.sql $(1)/usr/share/mariadb
-endef
-
-define Package/mariadb-server-extra/install
-	$(foreach b,$(MARIADB_SERVER_EXTRA),$(call Package/mariadb/install/bin,$(1),$(b));)
-endef
-
-define Package/mariadb-server/conffiles
-/etc/my.cnf
-$(PLUGIN_DIR)/daemon_example.ini
-endef
-
-define BuildPlugin
-  define Package/$(PKG_NAME)-server-plugin-$(subst _,-,$(1))
-    $$(call Package/mariadb/Default)
-    TITLE:=MariaDB database plugin
-    DEPENDS:=mariadb-server $(patsubst +%,+PACKAGE_$(PKG_NAME)-server-plugin-$(subst _,-,$(1)):%,$(2))
-  endef
-  define Package/$(PKG_NAME)-server-plugin-$(subst _,-,$(1))/description
-    $$(call Package/mariadb/description/Default)
-
-This package provides the $(1) plugin.
-
-  endef
-  define Package/$(PKG_NAME)-server-plugin-$(subst _,-,$(1))/install
-  	$(INSTALL_DIR) $$(1)$(PLUGIN_DIR)
-	$(INSTALL_BIN) \
-		$(PKG_INSTALL_DIR)$(PLUGIN_DIR)/$(1).so \
-		$$(1)$(PLUGIN_DIR)
-  endef
-  $$(eval $$(call BuildPackage,$(PKG_NAME)-server-plugin-$(subst _,-,$(1))))
-endef
-
-$(eval $(call HostBuild))
-$(eval $(call BuildPackage,libmariadbclient))
-$(eval $(call BuildPackage,mariadb-client))
-$(eval $(call BuildPackage,mariadb-client-extra))
-$(eval $(call BuildPackage,mariadb-extra-charsets))
-$(eval $(call BuildPackage,mariadb-server))
-$(eval $(call BuildPackage,mariadb-server-extra))
-
-$(eval $(call BuildPlugin,adt_null,))
-$(eval $(call BuildPlugin,auth_0x0100,))
-$(eval $(call BuildPlugin,auth_ed25519,))
-$(eval $(call BuildPlugin,auth_socket,))
-$(eval $(call BuildPlugin,auth_test_plugin,))
-$(eval $(call BuildPlugin,client_ed25519,))
-$(eval $(call BuildPlugin,debug_key_management,))
-$(eval $(call BuildPlugin,dialog_examples,))
-$(eval $(call BuildPlugin,disks,))
-$(eval $(call BuildPlugin,example_key_management,))
-$(eval $(call BuildPlugin,feedback,))
-$(eval $(call BuildPlugin,file_key_management,))
-$(eval $(call BuildPlugin,ha_archive,))
-$(eval $(call BuildPlugin,ha_blackhole,))
-$(eval $(call BuildPlugin,ha_connect,+libxml2))
-$(eval $(call BuildPlugin,ha_example,))
-$(eval $(call BuildPlugin,ha_federated,))
-$(eval $(call BuildPlugin,ha_federatedx,))
-$(eval $(call BuildPlugin,ha_sequence,))
-$(eval $(call BuildPlugin,ha_sphinx,))
-$(eval $(call BuildPlugin,ha_spider,))
-$(eval $(call BuildPlugin,ha_test_sql_discovery,))
-$(eval $(call BuildPlugin,handlersocket,))
-$(eval $(call BuildPlugin,libdaemon_example,))
-$(eval $(call BuildPlugin,locales,))
-$(eval $(call BuildPlugin,metadata_lock_info,))
-$(eval $(call BuildPlugin,mypluglib,))
-$(eval $(call BuildPlugin,qa_auth_client,))
-$(eval $(call BuildPlugin,qa_auth_interface,))
-$(eval $(call BuildPlugin,qa_auth_server,))
-$(eval $(call BuildPlugin,query_cache_info,))
-$(eval $(call BuildPlugin,query_response_time,))
-$(eval $(call BuildPlugin,server_audit,))
-$(eval $(call BuildPlugin,simple_password_check,))
-$(eval $(call BuildPlugin,sql_errlog,))
-$(eval $(call BuildPlugin,wsrep_info,))
diff --git a/utils/mariadb/files/my.cnf b/utils/mariadb/files/my.cnf
deleted file mode 100644
index b09486f85..000000000
--- a/utils/mariadb/files/my.cnf
+++ /dev/null
@@ -1,99 +0,0 @@
-# Example MySQL config file for small systems.
-#
-# This is for a system with little memory (<= 64M) where MySQL is only used
-# from time to time and it's important that the mysqld daemon
-# doesn't use much resources.
-#
-# MySQL programs look for option files in a set of
-# locations which depend on the deployment platform.
-# You can copy this option file to one of those
-# locations. For information about these locations, see:
-# http://dev.mysql.com/doc/mysql/en/option-files.html
-#
-# In this file, you can use all long options that a program supports.
-# If you want to know which options a program supports, run the program
-# with the "--help" option.
-
-# The following options will be passed to all MySQL clients
-[client]
-#password	= your_password
-port		= 3306
-socket		= /var/run/mysql/mysql.sock
-default-character-set = utf8mb4
-
-# Here follows entries for some specific programs
-
-# The MySQL server
-[mysqld]
-bind-address = 127.0.0.1
-port		= 3306
-socket		= /var/run/mysql/mysql.sock
-skip-external-locking
-max_allowed_packet = 64M
-transaction_isolation = READ-COMMITTED
-skip-name-resolve
-query_cache_type = 1
-query_cache_limit = 1M
-query_cache_min_res_unit = 1k
-query_cache_size = 32M
-tmp_table_size= 32M
-max_heap_table_size= 32M
-character-set-server = utf8mb4
-collation-server = utf8mb4_general_ci
-
-# Don't listen on a TCP/IP port at all. This can be a security enhancement,
-# if all processes that need to connect to mysqld run on the same host.
-# All interaction with mysqld must be made via Unix sockets or named pipes.
-# Note that using this option without enabling named pipes on Windows
-# (using the "enable-named-pipe" option) will render mysqld useless!
-# 
-#skip-networking
-server-id	= 1
-
-# Uncomment the following if you want to log updates
-#log-bin=mysql-bin
-
-# binary logging format - mixed recommended
-#binlog_format=mixed
-
-# Causes updates to non-transactional engines using statement format to be
-# written directly to binary log. Before using this option make sure that
-# there are no dependencies between transactional and non-transactional
-# tables such as in the statement INSERT INTO t_myisam SELECT * FROM
-# t_innodb; otherwise, slaves may diverge from the master.
-#binlog_direct_non_transactional_updates=TRUE
-
-# Additional InnoDB tweaks
-innodb_file_per_table=1
-innodb_buffer_pool_size = 64M
-innodb_buffer_pool_instances = 1
-innodb_flush_log_at_trx_commit = 2
-innodb_log_buffer_size = 32M
-innodb_max_dirty_pages_pct = 90
-#innodb_data_home_dir = /srv/mysql
-#innodb_data_file_path = ibdata1:10M:autoextend
-#innodb_log_group_home_dir = /srv/mysql
-# You can set .._buffer_pool_size up to 50 - 80 %
-# of RAM but beware of setting memory usage too high
-#innodb_buffer_pool_size = 16M
-# Set .._log_file_size to 25 % of buffer pool size
-#innodb_log_file_size = 5M
-#innodb_log_buffer_size = 8M
-#innodb_flush_log_at_trx_commit = 1
-#innodb_lock_wait_timeout = 50
-
-[mysqldump]
-quick
-max_allowed_packet = 16M
-
-[mysql]
-no-auto-rehash
-# Remove the next comment character if you are not familiar with SQL
-#safe-updates
-
-[myisamchk]
-key_buffer_size = 8M
-sort_buffer_size = 8M
-
-[mysqlhotcopy]
-interactive-timeout
diff --git a/utils/mariadb/files/mysqld.init b/utils/mariadb/files/mysqld.init
deleted file mode 100644
index c26a12227..000000000
--- a/utils/mariadb/files/mysqld.init
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/bin/sh /etc/rc.common
-# Copyright (C) 2010-2018 OpenWrt.org
-
-START=95
-STOP=10
-
-USE_PROCD=1
-
-#PROCD_DEBUG=1
-
-MYSQLD=mysqld
-
-LOGGER="/usr/bin/logger -p user.err -s -t $MYSQLD"
-[ -x /usr/bin/logger ] || LOGGER=echo
-PROG=/usr/sbin/$MYSQLD
-
-my_user="mysql"
-my_group="mysql"
-
-mysql_get_var() {
-	$PROG --help --verbose | sed -n 's|^'"$1"'[[:blank:]]\+||p'
-}
-
-start_service() {
-	local datadir="$(mysql_get_var datadir)"
-	local tmpdir="$(mysql_get_var tmpdir)"
-	local pidfile="$(mysql_get_var pid-file)"
-	local socketfile="$(mysql_get_var socket)"
-	local version="$(mysqld --version | sed -n 's|.*Ver[[:blank:]]*\([0-9.]*\)-.*|\1|p')"
-
-	# Auto installation
-	if [ \! -d "$datadir" ]; then
-		mysql_install_db --user=mysql --skip-name-resolve --skip-test-db
-		echo "$version" > "$datadir"/.version
-	fi	
-
-	for i in /var/lib/mysql "$tmpdir" "$(dirname "$pidfile")" "$(dirname "$socketfile")"; do
-		if [ \! -d "$i" ]; then
-			mkdir -p "$i"
-			chown "$my_user":"$my_group" "$i"
-		fi
-	done
-
-	# Migration from old versions
-	if [ "`cat "$datadir"/.version 2> /dev/null`" \!= "$version" ]; then
-		sudo -u mysql mysqld --skip-networking --skip-grant-tables --socket=/tmp/mysql_upgrade.sock &
-		PID="$!"
-		i=0
-		while [ "$i" -lt 15 ] && [ \! -S /tmp/mysql_upgrade.sock ]; do
-			sleep 1
-			i="`expr $i + 1`"
-		done
-		[ -S /tmp/mysql_upgrade.sock ] || exit 1
-		mysql_upgrade --upgrade-system-tables --socket=/tmp/mysql_upgrade.sock
-		echo "$version" > "$datadir"/.version
-		kill "$PID"
-		i=0
-		while [ "$i" -lt 60 ] && [ -n "`grep mysql /proc/$PID/cmdline 2> /dev/null`" ]; do
-			sleep 1
-			[ "$i" -lt 30 ] || kill "$PID"
-			i="`expr $i + 1`"
-		done
-		if [ -n "`grep mysql /proc/$PID/cmdline 2> /dev/null`" ]; then
-			kill -9 "$PID"
-		fi
-	fi
-
-	procd_open_instance
-
-	procd_set_param command $PROG $MY_ARGS
-	procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
-	# forward stderr to logd
-	procd_set_param stderr 1
-	procd_set_param user "$my_user"
-
-	procd_close_instance
-}
diff --git a/utils/mariadb/patches/100-fix_hostname.patch b/utils/mariadb/patches/100-fix_hostname.patch
deleted file mode 100644
index 0a64dc6f3..000000000
--- a/utils/mariadb/patches/100-fix_hostname.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/scripts/mysql_install_db.sh
-+++ b/scripts/mysql_install_db.sh
-@@ -418,7 +418,7 @@ fi
- 
- 
- # Try to determine the hostname
--hostname=`@HOSTNAME@`
-+hostname=`cat /proc/sys/kernel/hostname`
- 
- # Check if hostname is valid
- if test "$cross_bootstrap" -eq 0 -a "$in_rpm" -eq 0 -a "$force" -eq 0
diff --git a/utils/mariadb/patches/110-pcre.cmake.patch b/utils/mariadb/patches/110-pcre.cmake.patch
deleted file mode 100644
index 6e1d0b259..000000000
--- a/utils/mariadb/patches/110-pcre.cmake.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/cmake/pcre.cmake
-+++ b/cmake/pcre.cmake
-@@ -14,6 +14,8 @@ MACRO (CHECK_PCRE)
-         return -pcre_exec(NULL, NULL, NULL, -999, -999, 0, NULL, 0) < 256;
-         }"  PCRE_STACK_SIZE_OK)
-       SET(CMAKE_REQUIRED_LIBRARIES)
-+    ELSE()
-+      SET(PCRE_STACK_SIZE_OK TRUE)
-     ENDIF()
-   ENDIF()
-   IF(NOT HAVE_PCRE_STACK_GUARD OR NOT PCRE_STACK_SIZE_OK OR
diff --git a/utils/mariadb/patches/140-mips-connect-unaligned.patch b/utils/mariadb/patches/140-mips-connect-unaligned.patch
deleted file mode 100644
index 9912c0e28..000000000
--- a/utils/mariadb/patches/140-mips-connect-unaligned.patch
+++ /dev/null
@@ -1,262 +0,0 @@
-Description: Handle unaligned buffers in connect's TYPBLK class
- On MIPS platforms (and probably others) unaligned memory access results in a
- bus error. In the connect storage engine, block data for some data formats is
- stored packed in memory and the TYPBLK class is used to read values from it.
- Since TYPBLK does not have special handling for this packed memory, it can
- quite easily result in unaligned memory accesses.
- .
- The simple way to fix this is to perform all accesses to the main buffer
- through memcpy. With GCC and optimizations turned on, this call to memcpy is
- completely optimized away on architectures where unaligned accesses are ok
- (like x86).
-Author: James Cowgill <jcowgill@debian.org>
----
-This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
---- a/storage/connect/valblk.h
-+++ b/storage/connect/valblk.h
-@@ -139,6 +139,7 @@ class VALBLK : public BLOCK {
-   int     Prec;             // Precision of float values
-   }; // end of class VALBLK
- 
-+
- /***********************************************************************/
- /*  Class TYPBLK: represents a block of typed values.                  */
- /***********************************************************************/
-@@ -151,40 +152,41 @@ class TYPBLK : public VALBLK {
-   // Implementation
-   virtual bool   Init(PGLOBAL g, bool check);
-   virtual int    GetVlen(void) {return sizeof(TYPE);}
--  virtual char   GetTinyValue(int n) {return (char)Typp[n];}
--  virtual uchar  GetUTinyValue(int n) {return (uchar)Typp[n];}
--  virtual short  GetShortValue(int n) {return (short)Typp[n];}
--  virtual ushort GetUShortValue(int n) {return (ushort)Typp[n];}
--  virtual int    GetIntValue(int n) {return (int)Typp[n];}
--  virtual uint   GetUIntValue(int n) {return (uint)Typp[n];}
--  virtual longlong GetBigintValue(int n) {return (longlong)Typp[n];}
--  virtual ulonglong GetUBigintValue(int n) {return (ulonglong)Typp[n];}
--  virtual double GetFloatValue(int n) {return (double)Typp[n];}
-+
-+  virtual char   GetTinyValue(int n) {return (char)UnalignedRead(n);}
-+  virtual uchar  GetUTinyValue(int n) {return (uchar)UnalignedRead(n);}
-+  virtual short  GetShortValue(int n) {return (short)UnalignedRead(n);}
-+  virtual ushort GetUShortValue(int n) {return (ushort)UnalignedRead(n);}
-+  virtual int    GetIntValue(int n) {return (int)UnalignedRead(n);}
-+  virtual uint   GetUIntValue(int n) {return (uint)UnalignedRead(n);}
-+  virtual longlong GetBigintValue(int n) {return (longlong)UnalignedRead(n);}
-+  virtual ulonglong GetUBigintValue(int n) {return (ulonglong)UnalignedRead(n);}
-+  virtual double GetFloatValue(int n) {return (double)UnalignedRead(n);}
-   virtual char  *GetCharString(char *p, int n);
--  virtual void   Reset(int n) {Typp[n] = 0;}
-+  virtual void   Reset(int n) {UnalignedWrite(n, 0);}
- 
-   // Methods
-   using VALBLK::SetValue;
-   virtual void   SetValue(PCSZ sp, int n);
-   virtual void   SetValue(const char *sp, uint len, int n);
-   virtual void   SetValue(short sval, int n)
--                  {Typp[n] = (TYPE)sval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)sval); SetNull(n, false);}
-   virtual void   SetValue(ushort sval, int n)
--                  {Typp[n] = (TYPE)sval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)sval); SetNull(n, false);}
-   virtual void   SetValue(int lval, int n)
--                  {Typp[n] = (TYPE)lval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)lval); SetNull(n, false);}
-   virtual void   SetValue(uint lval, int n)
--                  {Typp[n] = (TYPE)lval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)lval); SetNull(n, false);}
-   virtual void   SetValue(longlong lval, int n)
--                  {Typp[n] = (TYPE)lval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)lval); SetNull(n, false);}
-   virtual void   SetValue(ulonglong lval, int n)
--                  {Typp[n] = (TYPE)lval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)lval); SetNull(n, false);}
-   virtual void   SetValue(double fval, int n)
--                  {Typp[n] = (TYPE)fval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)fval); SetNull(n, false);}
-   virtual void   SetValue(char cval, int n)
--                  {Typp[n] = (TYPE)cval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)cval); SetNull(n, false);}
-   virtual void   SetValue(uchar cval, int n)
--                  {Typp[n] = (TYPE)cval; SetNull(n, false);}
-+                  {UnalignedWrite(n, (TYPE)cval); SetNull(n, false);}
-   virtual void   SetValue(PVAL valp, int n);
-   virtual void   SetValue(PVBLK pv, int n1, int n2);
-   virtual void   SetMin(PVAL valp, int n);
-@@ -206,6 +208,17 @@ class TYPBLK : public VALBLK {
-   // Members
-   TYPE* const &Typp;
-   const char  *Fmt;
-+
-+  // Unaligned access
-+  TYPE UnalignedRead(int n) const {
-+    TYPE result;
-+    memcpy(&result, Typp + n, sizeof(TYPE));
-+    return result;
-+  }
-+
-+  void UnalignedWrite(int n, TYPE value) {
-+    memcpy(Typp + n, &value, sizeof(TYPE));
-+  }
-   }; // end of class TYPBLK
- 
- /***********************************************************************/
---- a/storage/connect/valblk.cpp
-+++ b/storage/connect/valblk.cpp
-@@ -268,14 +268,14 @@ bool TYPBLK<TYPE>::Init(PGLOBAL g, bool
- template <class TYPE>
- char *TYPBLK<TYPE>::GetCharString(char *p, int n)
-   {
--  sprintf(p, Fmt, Typp[n]);
-+  sprintf(p, Fmt, UnalignedRead(n));
-   return p;
-   } // end of GetCharString
- 
- template <>
- char *TYPBLK<double>::GetCharString(char *p, int n)
-   {
--  sprintf(p, Fmt, Prec, Typp[n]);
-+  sprintf(p, Fmt, Prec, UnalignedRead(n));
-   return p;
-   } // end of GetCharString
- 
-@@ -291,7 +291,7 @@ void TYPBLK<TYPE>::SetValue(PVAL valp, i
-   ChkTyp(valp);
- 
-   if (!(b = valp->IsNull()))
--    Typp[n] = GetTypedValue(valp);
-+    UnalignedWrite(n, GetTypedValue(valp));
-   else
-     Reset(n);
- 
-@@ -353,9 +353,9 @@ void TYPBLK<TYPE>::SetValue(PCSZ p, int
-   ulonglong val = CharToNumber(p, strlen(p), maxval, Unsigned, &minus); 
-     
-   if (minus && val < maxval)
--    Typp[n] = (TYPE)(-(signed)val);
-+    UnalignedWrite(n, (TYPE)(-(signed)val));
-   else
--    Typp[n] = (TYPE)val;
-+    UnalignedWrite(n, (TYPE)val);
- 
-   SetNull(n, false);
-   } // end of SetValue
-@@ -398,7 +398,7 @@ void TYPBLK<double>::SetValue(PCSZ p, in
- 		throw Type;
- 	} // endif Check
- 
--  Typp[n] = atof(p);
-+  UnalignedWrite(n, atof(p));
-   SetNull(n, false);
-   } // end of SetValue
- 
-@@ -430,7 +430,7 @@ void TYPBLK<TYPE>::SetValue(PVBLK pv, in
-   ChkTyp(pv);
- 
-   if (!(b = pv->IsNull(n2) && Nullable))
--    Typp[n1] = GetTypedValue(pv, n2);
-+    UnalignedWrite(n1, GetTypedValue(pv, n2));
-   else
-     Reset(n1);
- 
-@@ -481,10 +481,10 @@ void TYPBLK<TYPE>::SetMin(PVAL valp, int
-   {
-   CheckParms(valp, n)
-   TYPE  tval = GetTypedValue(valp);
--  TYPE& tmin = Typp[n];
-+  TYPE  tmin = UnalignedRead(n);
- 
-   if (tval < tmin)
--    tmin = tval;
-+    UnalignedWrite(n, tval);
- 
-   } // end of SetMin
- 
-@@ -496,10 +496,10 @@ void TYPBLK<TYPE>::SetMax(PVAL valp, int
-   {
-   CheckParms(valp, n)
-   TYPE  tval = GetTypedValue(valp);
--  TYPE& tmin = Typp[n];
-+  TYPE  tmin = UnalignedRead(n);
- 
-   if (tval > tmin)
--    tmin = tval;
-+    UnalignedWrite(n, tval);
- 
-   } // end of SetMax
- 
-@@ -513,8 +513,7 @@ void TYPBLK<TYPE>::SetValues(PVBLK pv, i
-   CheckType(pv)
-   TYPE *lp = ((TYPBLK*)pv)->Typp;
- 
--  for (int i = k; i < n; i++)          // TODO
--    Typp[i] = lp[i];
-+  memcpy(Typp + k, lp + k, sizeof(TYPE) * n);
- 
-   } // end of SetValues
- #endif // 0
-@@ -525,7 +524,7 @@ void TYPBLK<TYPE>::SetValues(PVBLK pv, i
- template <class TYPE>
- void TYPBLK<TYPE>::Move(int i, int j)
-   {
--  Typp[j] = Typp[i];
-+  UnalignedWrite(j, UnalignedRead(i));
-   MoveNull(i, j);
-   } // end of Move
- 
-@@ -539,7 +538,7 @@ int TYPBLK<TYPE>::CompVal(PVAL vp, int n
-   ChkIndx(n);
-   ChkTyp(vp);
- #endif   // _DEBUG
--  TYPE mlv = Typp[n];
-+  TYPE mlv = UnalignedRead(n);
-   TYPE vlv = GetTypedValue(vp);
- 
-   return (vlv > mlv) ? 1 : (vlv < mlv) ? (-1) : 0;
-@@ -551,8 +550,8 @@ int TYPBLK<TYPE>::CompVal(PVAL vp, int n
- template <class TYPE>
- int TYPBLK<TYPE>::CompVal(int i1, int i2)
-   {
--  TYPE lv1 = Typp[i1];
--  TYPE lv2 = Typp[i2];
-+  TYPE lv1 = UnalignedRead(i1);
-+  TYPE lv2 = UnalignedRead(i2);
- 
-   return (lv1 > lv2) ? 1 : (lv1 < lv2) ? (-1) : 0;
-   } // end of CompVal
-@@ -589,7 +588,7 @@ int TYPBLK<TYPE>::Find(PVAL vp)
-   TYPE n = GetTypedValue(vp);
- 
-   for (i = 0; i < Nval; i++)
--    if (n == Typp[i])
-+    if (n == UnalignedRead(i))
-       break;
- 
-   return (i < Nval) ? i : (-1);
-@@ -605,7 +604,7 @@ int TYPBLK<TYPE>::GetMaxLength(void)
-   int i, n, m;
- 
-   for (i = n = 0; i < Nval; i++) {
--    m = sprintf(buf, Fmt, Typp[i]);
-+    m = sprintf(buf, Fmt, UnalignedRead(i));
-     n = MY_MAX(n, m);
-     } // endfor i
- 
-@@ -1335,7 +1334,7 @@ char *DATBLK::GetCharString(char *p, int
-   char *vp;
- 
-   if (Dvalp) {
--    Dvalp->SetValue(Typp[n]);
-+    Dvalp->SetValue(UnalignedRead(n));
-     vp = Dvalp->GetCharString(p);
-   } else
-     vp = TYPBLK<int>::GetCharString(p, n);
-@@ -1351,7 +1350,7 @@ void DATBLK::SetValue(PCSZ p, int n)
-   if (Dvalp) {
-     // Decode the string according to format
-     Dvalp->SetValue_psz(p);
--    Typp[n] = Dvalp->GetIntValue();
-+    UnalignedWrite(n, Dvalp->GetIntValue());
-   } else
-     TYPBLK<int>::SetValue(p, n);
- 
diff --git a/utils/mariadb/patches/160-mips-machine.patch b/utils/mariadb/patches/160-mips-machine.patch
deleted file mode 100644
index ecd34a0eb..000000000
--- a/utils/mariadb/patches/160-mips-machine.patch
+++ /dev/null
@@ -1,25 +0,0 @@
-Description: Fix DEFAULT_MACHINE on mips
- The DEFAULT_MACHINE constant is calculated from the CMAKE_SYSTEM_PROCESSOR
- variable which contains the processor which built mariadb. Since most Debian
- buildds run on 64-bit hardware even though they build 32-bit binaries,
- DEFAULT_MACHINE previously contained "mips64" on 32-bit builds. This confuses
- some mroonga tests which rely on DEFAULT_MACHINE to detect 64-bitness.
- .
- This patch fixes the value of DEFAULT_MACHINE so it always contains just "mips"
- on 32-bit mips builds.
-Author: James Cowgill <jcowgill@debian.org>
----
-This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
---- a/cmake/package_name.cmake
-+++ b/cmake/package_name.cmake
-@@ -34,6 +34,10 @@ IF(NOT VERSION)
-       SET(DEFAULT_MACHINE "mips")
-     ENDIF()
- 
-+    IF(NOT 64BIT AND CMAKE_SYSTEM_PROCESSOR MATCHES "^mips64")
-+      SET(DEFAULT_MACHINE "mips")
-+    ENDIF()
-+
-     IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
-       SET(NEED_DASH_BETWEEN_PLATFORM_AND_MACHINE 0)
-       SET(DEFAULT_PLATFORM "win")
diff --git a/utils/mariadb/patches/170-no-uint-in-pam.patch b/utils/mariadb/patches/170-no-uint-in-pam.patch
deleted file mode 100644
index 378149bb3..000000000
--- a/utils/mariadb/patches/170-no-uint-in-pam.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/plugin/auth_pam/testing/pam_mariadb_mtr.c
-+++ b/plugin/auth_pam/testing/pam_mariadb_mtr.c
-@@ -56,7 +56,7 @@ int pam_sm_authenticate(pam_handle_t *pa
-     if (strcmp(r1, "crash pam module") == 0 && atoi(r2) == 616)
-       abort();
- 
--    if (strlen(r1) == (size_t)atoi(r2) % 100)
-+    if (strlen(r1) == (unsigned int)atoi(r2) % 100)
-       retval = PAM_SUCCESS;
-     else
-       retval = PAM_AUTH_ERR;
diff --git a/utils/mariadb/patches/180-c11_atomics.patch b/utils/mariadb/patches/180-c11_atomics.patch
deleted file mode 100644
index 11c834d69..000000000
--- a/utils/mariadb/patches/180-c11_atomics.patch
+++ /dev/null
@@ -1,64 +0,0 @@
-Author: VicenÈiu Ciorbaru <vicentiu@mariadb.org>
-Date:   Fri Dec 21 19:14:04 2018 +0200
-
-   Link with libatomic to enable C11 atomics support
-
-   Some architectures (mips) require libatomic to support proper
-   atomic operations. Check first if support is available without
-   linking, otherwise use the library.
-
---- a/configure.cmake
-+++ b/configure.cmake
-@@ -863,7 +863,25 @@ int main()
-   long long int *ptr= &var;
-   return (int)__atomic_load_n(ptr, __ATOMIC_SEQ_CST);
- }"
--HAVE_GCC_C11_ATOMICS)
-+HAVE_GCC_C11_ATOMICS_WITHOUT_LIBATOMIC)
-+IF (HAVE_GCC_C11_ATOMICS_WITHOUT_LIBATOMIC)
-+  SET(HAVE_GCC_C11_ATOMICS True)
-+ELSE()
-+  SET(OLD_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})
-+  LIST(APPEND CMAKE_REQUIRED_LIBRARIES "atomic")
-+  CHECK_CXX_SOURCE_COMPILES("
-+  int main()
-+  {
-+    long long int var= 1;
-+    long long int *ptr= &var;
-+    return (int)__atomic_load_n(ptr, __ATOMIC_SEQ_CST);
-+  }"
-+  HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
-+  IF(HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
-+    SET(HAVE_GCC_C11_ATOMICS True)
-+  ENDIF()
-+  SET(CMAKE_REQUIRED_LIBRARIES ${OLD_CMAKE_REQUIRED_LIBRARIES})
-+ENDIF()
- 
- IF(WITH_VALGRIND)
-   SET(HAVE_valgrind 1)
---- a/mysys/CMakeLists.txt
-+++ b/mysys/CMakeLists.txt
-@@ -78,6 +78,10 @@ TARGET_LINK_LIBRARIES(mysys dbug strings
-  ${LIBNSL} ${LIBM} ${LIBRT} ${CMAKE_DL_LIBS} ${LIBSOCKET} ${LIBEXECINFO} ${CRC32_LIBRARY})
- DTRACE_INSTRUMENT(mysys)
- 
-+IF (HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
-+  TARGET_LINK_LIBRARIES(mysys atomic)
-+ENDIF()
-+
- IF(HAVE_BFD_H)
-   TARGET_LINK_LIBRARIES(mysys bfd)  
- ENDIF(HAVE_BFD_H)
---- a/sql/CMakeLists.txt
-+++ b/sql/CMakeLists.txt
-@@ -191,6 +191,10 @@ ELSE()
-   SET(MYSQLD_SOURCE main.cc ${DTRACE_PROBES_ALL})
- ENDIF()
- 
-+IF (HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
-+  TARGET_LINK_LIBRARIES(sql atomic)
-+ENDIF()
-+
- 
- IF(MSVC AND NOT WITHOUT_DYNAMIC_PLUGINS)
- 
diff --git a/utils/mariadb/patches/expand-localhost.patch b/utils/mariadb/patches/expand-localhost.patch
deleted file mode 100644
index 6be4b83de..000000000
--- a/utils/mariadb/patches/expand-localhost.patch
+++ /dev/null
@@ -1,16 +0,0 @@
---- a/scripts/mysql_system_tables_fix.sql
-+++ b/scripts/mysql_system_tables_fix.sql
-@@ -814,3 +814,13 @@ IF 1 = (SELECT count(*) FROM information
- END IF//
- 
- DELIMITER ;
-+
-+-- Expand localhost to 127.0.0.1
-+CREATE TEMPORARY TABLE localhost_expand SELECT * FROM global_priv WHERE host='localhost' AND user NOT IN (SELECT user FROM global_priv WHERE host='127.0.0.1');
-+UPDATE localhost_expand SET host='127.0.0.1';
-+INSERT INTO global_priv SELECT * from localhost_expand;
-+DROP TABLE localhost_expand;
-+CREATE TEMPORARY TABLE localhost_expand SELECT * FROM db WHERE host='localhost' AND user NOT IN (SELECT user FROM db WHERE host='127.0.0.1' OR host='%');
-+UPDATE localhost_expand SET host='127.0.0.1';
-+INSERT INTO db SELECT * from localhost_expand;
-+DROP TABLE localhost_expand;
diff --git a/utils/mariadb/patches/no-socket-auth.patch b/utils/mariadb/patches/no-socket-auth.patch
deleted file mode 100644
index 1f412d0e4..000000000
--- a/utils/mariadb/patches/no-socket-auth.patch
+++ /dev/null
@@ -1,30 +0,0 @@
---- a/scripts/mysql_system_tables_data.sql
-+++ b/scripts/mysql_system_tables_data.sql
-@@ -26,8 +26,6 @@
- -- a plain character
- SELECT LOWER( REPLACE((SELECT REPLACE(@@hostname,'_','\_')),'%','\%') )INTO @current_hostname;
- SELECT '{"access":18446744073709551615}' INTO @all_privileges;
--SELECT '{"access":18446744073709551615,"plugin":"mysql_native_password","authentication_string":"invalid","auth_or":[{},{"plugin":"unix_socket"}]}' into @all_with_auth;
--
- 
- -- Fill "global_priv" table with default users allowing root access
- -- from local machine if "global_priv" table didn't exist before
-@@ -38,16 +36,9 @@ INSERT INTO tmp_user_nopasswd VALUES ('l
- REPLACE INTO tmp_user_nopasswd SELECT @current_hostname,'root',@all_privileges FROM dual WHERE @current_hostname != 'localhost';
- REPLACE INTO tmp_user_nopasswd VALUES ('127.0.0.1','root',@all_privileges);
- REPLACE INTO tmp_user_nopasswd VALUES ('::1','root',@all_privileges);
---- More secure root account using unix socket auth.
--INSERT INTO tmp_user_socket VALUES ('localhost', 'root',@all_with_auth);
--REPLACE INTO tmp_user_socket VALUES ('localhost',IFNULL(@auth_root_socket, 'root'),@all_with_auth);
--IF @auth_root_socket is not null THEN
--  IF not exists(select 1 from information_schema.plugins where plugin_name='unix_socket') THEN
--     INSTALL SONAME 'auth_socket'; END IF; END IF;
- 
--INSERT INTO global_priv SELECT * FROM tmp_user_nopasswd WHERE @had_user_table=0 AND @auth_root_socket IS NULL;
--INSERT INTO global_priv SELECT * FROM tmp_user_socket WHERE @had_user_table=0 AND @auth_root_socket IS NOT NULL;
--DROP TABLE tmp_user_nopasswd, tmp_user_socket;
-+INSERT INTO global_priv SELECT * FROM tmp_user_nopasswd WHERE @had_user_table=0;
-+DROP TABLE tmp_user_nopasswd;
- 
- CREATE TEMPORARY TABLE tmp_proxies_priv LIKE proxies_priv;
- INSERT INTO tmp_proxies_priv SELECT @current_hostname, 'root', '', '', TRUE, '', now() FROM DUAL WHERE @current_hostname != 'localhost';
-- 
2.25.1


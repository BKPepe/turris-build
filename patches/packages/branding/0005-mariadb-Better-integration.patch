From 5e64abd772ad7ff6c5c82cdb5011f75cfc590935 Mon Sep 17 00:00:00 2001
From: Michal Hrusecky <michal.hrusecky@nic.cz>
Date: Wed, 12 Dec 2018 15:16:21 +0100
Subject: [PATCH 5/6] mariadb: Better integration

Provide automatic database creation and automatic migration from the old
version.

Signed-off-by: Michal Hrusecky <Michal@Hrusecky.net>
---
 utils/mariadb/files/mysqld.init | 41 +++++++++++++++++++++++++--------
 1 file changed, 31 insertions(+), 10 deletions(-)

diff --git a/utils/mariadb/files/mysqld.init b/utils/mariadb/files/mysqld.init
index e9fe7ee..175198b 100644
--- a/utils/mariadb/files/mysqld.init
+++ b/utils/mariadb/files/mysqld.init
@@ -26,17 +26,13 @@ start_service() {
 	local tmpdir="$(mysql_get_var tmpdir)"
 	local pidfile="$(mysql_get_var pid-file)"
 	local socketfile="$(mysql_get_var socket)"
+	local version="$(mysqld --version | sed -n 's|.*Ver[[:blank:]]*\([0-9.]*\)-.*|\1|p')"
 
-	[ -d "$datadir" ] || {
-		$LOGGER "datadir '$datadir' does not exist"
-		return 1
-	}
-
-	[ -f "$datadir/mysql/tables_priv.MYD" ] || {
-		$LOGGER "cannot detect privileges table, you might need to"
-		$LOGGER "run 'mysql_install_db --force' to initialize the system tables"
-		return 1
-	}
+	# Auto installation
+	if [ \! -d "$datadir" ]; then
+		mysql_install_db --skip-auth-anonymous-user --user=mysql --skip-name-resolve
+		echo "$version" > "$datadir"/.version
+	fi	
 
 	for i in /var/lib/mysql "$tmpdir" "$(dirname "$pidfile")" "$(dirname "$socketfile")"; do
 		if [ \! -d "$i" ]; then
@@ -45,9 +41,34 @@ start_service() {
 		fi
 	done
 
+	# Migration from old versions
+	if [ "`cat "$datadir"/.version 2> /dev/null`" \!= "$version" ]; then
+		sudo -u mysql mysqld --skip-networking --skip-grant-tables --socket=/tmp/mysql_upgrade.sock &
+		PID="$!"
+		i=0
+		while [ "$i" -lt 15 ] && [ \! -S /tmp/mysql_upgrade.sock ]; do
+			sleep 1
+			i="`expr $i + 1`"
+		done
+		[ -S /tmp/mysql_upgrade.sock ] || exit 1
+		mysql_upgrade --upgrade-system-tables --socket=/tmp/mysql_upgrade.sock
+		echo "$version" > "$datadir"/.version
+		kill "$PID"
+		i=0
+		while [ "$i" -lt 60 ] && [ -n "`grep mysql /proc/$PID/cmdline 2> /dev/null`" ]; do
+			sleep 1
+			[ "$i" -lt 30 ] || kill "$PID"
+			i="`expr $i + 1`"
+		done
+		if [ -n "`grep mysql /proc/$PID/cmdline 2> /dev/null`" ]; then
+			kill -9 "$PID"
+		fi
+	fi
+
 	procd_open_instance
 
 	procd_set_param command $PROG $MY_ARGS
+	procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
 	# forward stderr to logd
 	procd_set_param stderr 1
 	procd_set_param user "$my_user"
-- 
2.19.2


From 94d8169974797ad832c29a1109aa84bea907a5b5 Mon Sep 17 00:00:00 2001
From: Jan Pavlinec <jan.pavlinec@nic.cz>
Date: Sat, 9 Feb 2019 14:54:52 +0100
Subject: [PATCH] addrwatch: backport upstream version

---
 net/addrwatch/Makefile                             | 11 +++++-----
 net/addrwatch/files/addrwatch.init                 | 22 +++++++++----------
 net/addrwatch/patches/001-fix-sys_siglist.patch    | 10 ++++++---
 net/addrwatch/patches/002-fix-uclibc-sysconf.patch |  2 +-
 net/addrwatch/patches/003-fix-pkt-hash.patch       | 25 ++++++++++++++++++++++
 5 files changed, 48 insertions(+), 22 deletions(-)
 create mode 100644 net/addrwatch/patches/003-fix-pkt-hash.patch

diff --git a/net/addrwatch/Makefile b/net/addrwatch/Makefile
index 8b683ee..c396990 100644
--- a/net/addrwatch/Makefile
+++ b/net/addrwatch/Makefile
@@ -8,15 +8,14 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=addrwatch
-PKG_VERSION:=0.8
+PKG_VERSION:=1.0.1
 PKG_RELEASE:=2
 
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION)-master.tar.gz
-PKG_SOURCE_URL:=https://github.com/fln/addrwatch/releases/download/$(PKG_VERSION)/
-PKG_HASH:=0455bd8d2e18a793e1182712bf4df3e54a5b7575f82f5b79b60deef19ff93df8
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=https://codeload.github.com/fln/addrwatch/tar.gz/v$(PKG_VERSION)?
+PKG_HASH:=be70150a357558481de8488665da1d6efdfa5dc37666d9fa68e8e73a8b59ade6
 PKG_LICENSE:=GPL-3.0
 PKG_LICENSE_FILES:=COPYING
-PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_VERSION)-master
 PKG_FIXUP:=autoreconf
 PKG_BUILD_DEPENDS:=USE_UCLIBC:argp-standalone USE_MUSL:argp-standalone
 
@@ -32,7 +31,7 @@ define Package/addrwatch
 endef
 
 define Package/addrwatch/description
-  This is a tool similar to arpwatch. It main purpose is to monitor network and 
+  This is a tool similar to arpwatch. It main purpose is to monitor network and
   log discovered ethernet/ip pairings. Addrwatch is extremely useful in networks
   with IPv6 autoconfiguration (RFC4862) enabled. It allows to track IPv6
   addresses of hosts using IPv6 privacy extensions (RFC4941).
diff --git a/net/addrwatch/files/addrwatch.init b/net/addrwatch/files/addrwatch.init
index fb0ea46..7b0f74c 100644
--- a/net/addrwatch/files/addrwatch.init
+++ b/net/addrwatch/files/addrwatch.init
@@ -5,7 +5,7 @@ START=50
 USE_PROCD=1
 
 validate_section_addrwatch() {
-	uci_validate_section addrwatch addrwatch "${1}" \
+	uci_load_validate addrwatch addrwatch "$1" "$2" \
 		'disabled:bool:0' \
 		'interface:list(string):lan' \
 		'syslog:bool:1' \
@@ -17,16 +17,13 @@ validate_section_addrwatch() {
 		'blacklist:list(or(ip4addr,ip6addr))' \
 		'hashsize:range(1,65536):1024'\
 		'ratelimit:integer:3600'
-	return $?
 }
 
 start_instance() {
 	local cfg="$1"
-	local disabled interface syslog output quiet verbose ipv4only ipv6only
-	local blacklist hashsize ratelimit
 	local netdevs=""
 
-	validate_section_addrwatch "${cfg}" || {
+	[ "$2" = 0 ] || {
 		echo "validation of config $cfg failed"
 		return 1
 	}
@@ -34,14 +31,14 @@ start_instance() {
 
 	for iface in $interface; do
 		local netdev
-		network_get_physdev netdev "${iface}"
-		append netdevs "${netdev}"
+		network_get_physdev netdev "$iface"
+		append netdevs "$netdev"
 	done
 
 	procd_open_instance
 	procd_set_param command /usr/sbin/addrwatch
-	[ "${syslog}" -eq 1 ] && procd_append_param command --syslog
-	[ -n "${output}" ] && procd_append_param command --output "$output"
+	[ "$syslog" -eq 1 ] && procd_append_param command --syslog
+	[ -n "$output" ] && procd_append_param command --output "$output"
 	[ "$quiet" -eq 1 ] && procd_append_param command --quiet
 	[ "$verbose" -eq 1 ] && procd_append_param command --verbose
 	[ "$ipv4only" -eq 1 ] && procd_append_param command --ipv4only
@@ -49,14 +46,14 @@ start_instance() {
 	[ -n "$hashsize" ] && procd_append_param command --hashsize "$hashsize"
 	[ -n "$ratelimit" ] && procd_append_param command --ratelimit "$ratelimit"
 	for blitem in $blacklist; do
-		procd_append_param command "--blacklist=${blitem}"
+		procd_append_param command "--blacklist=$blitem"
 	done
 	procd_append_param command $netdevs
 	procd_set_param netdev $netdevs
 	procd_set_param respawn
 	procd_open_trigger
 	for iface in $interface; do
-		procd_add_interface_trigger "interface.*" ${iface} /etc/init.d/addrwatch reload
+		procd_add_interface_trigger "interface.*" $iface /etc/init.d/addrwatch reload
 	done
 	procd_close_trigger
 	procd_close_instance
@@ -65,9 +62,10 @@ start_instance() {
 start_service() {
 	. /lib/functions/network.sh
 	config_load 'addrwatch'
-	config_foreach start_instance 'addrwatch'
+	config_foreach validate_section_addrwatch 'addrwatch' start_instance
 }
 
 service_triggers() {
 	procd_add_reload_trigger 'addrwatch'
+	procd_add_validation validate_section_addrwatch
 }
diff --git a/net/addrwatch/patches/001-fix-sys_siglist.patch b/net/addrwatch/patches/001-fix-sys_siglist.patch
index 53032b5..9271335 100644
--- a/net/addrwatch/patches/001-fix-sys_siglist.patch
+++ b/net/addrwatch/patches/001-fix-sys_siglist.patch
@@ -1,6 +1,8 @@
+diff --git a/configure.ac b/configure.ac
+index e70edc2..5d8b716 100644
 --- a/configure.ac
 +++ b/configure.ac
-@@ -56,9 +56,6 @@ AC_CHECK_HEADERS([arpa/inet.h netinet/in
+@@ -58,9 +58,6 @@ AC_CHECK_HEADERS([arpa/inet.h netinet/in.h stdint.h stdlib.h syslog.h unistd.h])
  # Checks for typedefs, structures, and compiler characteristics.
  AC_C_INLINE
  AC_TYPE_PID_T
@@ -10,9 +12,11 @@
  AC_TYPE_UINT32_T
  AC_TYPE_UINT16_T
  AC_TYPE_UINT8_T
+diff --git a/src/addrwatch.c b/src/addrwatch.c
+index 7647e02..93e1f61 100644
 --- a/src/addrwatch.c
 +++ b/src/addrwatch.c
-@@ -339,7 +339,7 @@ void reload_cb(evutil_socket_t fd, short
+@@ -327,7 +327,7 @@ void reload_cb(evutil_socket_t fd, short events, void *arg)
  void reload_cb(int fd, short events, void *arg)
  #endif
  {
@@ -21,7 +25,7 @@
  	log_msg(LOG_DEBUG, "Reopening output files");
  
  	output_flatfile_reload();
-@@ -353,7 +353,7 @@ void stop_cb(evutil_socket_t fd, short e
+@@ -341,7 +341,7 @@ void stop_cb(evutil_socket_t fd, short events, void *arg)
  void stop_cb(int fd, short events, void *arg)
  #endif
  {
diff --git a/net/addrwatch/patches/002-fix-uclibc-sysconf.patch b/net/addrwatch/patches/002-fix-uclibc-sysconf.patch
index c3c0e2e..da2ab41 100644
--- a/net/addrwatch/patches/002-fix-uclibc-sysconf.patch
+++ b/net/addrwatch/patches/002-fix-uclibc-sysconf.patch
@@ -1,6 +1,6 @@
 --- a/src/addrwatch.c
 +++ b/src/addrwatch.c
-@@ -492,7 +492,7 @@ int main(int argc, char *argv[])
+@@ -485,7 +485,7 @@ int main(int argc, char *argv[])
  	argp_parse(&argp, argc, argv, 0, &optind, 0);
  
  	if (!cfg.hostname) {
diff --git a/net/addrwatch/patches/003-fix-pkt-hash.patch b/net/addrwatch/patches/003-fix-pkt-hash.patch
new file mode 100644
index 0000000..caae43b
--- /dev/null
+++ b/net/addrwatch/patches/003-fix-pkt-hash.patch
@@ -0,0 +1,25 @@
+From 3852468f402bf9070eb1c9bab16cb1119db52f63 Mon Sep 17 00:00:00 2001
+From: Julius Kriukas <julius@kriukas.lt>
+Date: Sun, 4 Feb 2018 21:35:52 +0200
+Subject: [PATCH] Add experimental meson build support
+
+---
+ src/storage.c   |  2 +-
+ 1 file changed, 1 insertions(+), 1 deletion(-)
+
+diff --git a/src/storage.c b/src/storage.c
+index c162496..8b7a77e 100644
+--- a/src/storage.c
++++ b/src/storage.c
+@@ -76,7 +76,7 @@ struct ip_node *blacklist_match(uint8_t *ip_addr, uint8_t addr_len)
+ 	return NULL;
+ }
+ 
+-inline uint16_t pkt_hash(uint8_t *l2_addr, uint8_t *ip_addr, uint8_t len, uint16_t vlan_tag)
++static inline uint16_t pkt_hash(uint8_t *l2_addr, uint8_t *ip_addr, uint8_t len, uint16_t vlan_tag)
+ {
+ 	int i;
+ 	uint16_t sum;
+-- 
+2.17.1
+
-- 
2.7.4


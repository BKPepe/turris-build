From b4eb5270808b6d02c093dd468b7f2ab1c4bf56e2 Mon Sep 17 00:00:00 2001
From: Josef Schlehofer <pepe.schlehofer@gmail.com>
Date: Mon, 28 Nov 2022 12:33:14 +0100
Subject: [PATCH] mt76: backport version from OpenWrt master branch

---
 package/kernel/mt76/Makefile                  | 45 +++++++++++---
 ...ss-the-dst-buffer-to-of_get_mac_addr.patch | 26 --------
 .../patches/100-aggregation-definitions.patch | 13 ++++
 ...ix-encap-offload-ethernet-type-check.patch | 59 -------------------
 .../kernel/mt76/patches/110-api_update.patch  |  4 +-
 ...ifi-mt76-ignore-key-disable-commands.patch | 42 ++++++-------
 6 files changed, 73 insertions(+), 116 deletions(-)
 delete mode 100644 package/kernel/mt76/patches/100-Revert-of-net-pass-the-dst-buffer-to-of_get_mac_addr.patch
 create mode 100644 package/kernel/mt76/patches/100-aggregation-definitions.patch
 delete mode 100644 package/kernel/mt76/patches/101-fix-encap-offload-ethernet-type-check.patch

diff --git a/package/kernel/mt76/Makefile b/package/kernel/mt76/Makefile
index 8210478c37..31c177219a 100644
--- a/package/kernel/mt76/Makefile
+++ b/package/kernel/mt76/Makefile
@@ -8,9 +8,9 @@ PKG_LICENSE_FILES:=
 
 PKG_SOURCE_URL:=https://github.com/openwrt/mt76
 PKG_SOURCE_PROTO:=git
-PKG_SOURCE_DATE:=2021-12-03
-PKG_SOURCE_VERSION:=678071ef70297b7264661c356ddb3c8cf7f3c87b
-PKG_MIRROR_HASH:=b1f8613f7c65ca6a893f83ed9efc3f7ce72b9b4904fd11b89264f57f4f2a3b5e
+PKG_SOURCE_DATE:=2022-10-01
+PKG_SOURCE_VERSION:=72b87836d368685a093b927229209b61d8272541
+PKG_MIRROR_HASH:=ea4dfe93f7632d5063ac2ccf0f5a3698e2bfeadbbef45910381b5ef07e334cfc
 
 PKG_MAINTAINER:=Felix Fietkau <nbd@nbd.name>
 PKG_USE_NINJA:=0
@@ -221,22 +221,37 @@ endef
 define KernelPackage/mt7915e
   $(KernelPackage/mt76-default)
   TITLE:=MediaTek MT7915e wireless driver
-  DEPENDS+=@PCI_SUPPORT +kmod-mt7615-common +kmod-hwmon-core +kmod-thermal +@DRIVER_11AX_SUPPORT
+  DEPENDS+=@PCI_SUPPORT +kmod-mt7615-common +kmod-hwmon-core +kmod-thermal +@DRIVER_11AX_SUPPORT +@KERNEL_RELAY
   FILES:= $(PKG_BUILD_DIR)/mt7915/mt7915e.ko
   AUTOLOAD:=$(call AutoProbe,mt7915e)
 endef
 
+define KernelPackage/mt7916-firmware
+  $(KernelPackage/mt76-default)
+  DEPENDS+=+kmod-mt7915e
+  TITLE:=MediaTek MT7916 firmware
+endef
+
 define KernelPackage/mt7921-common
+  $(KernelPackage/mt76-default)
   TITLE:=MediaTek MT7615 wireless driver common code
   HIDDEN:=1
-  DEPENDS+=@PCI_SUPPORT +kmod-mt76-core +kmod-mt76-connac
+  DEPENDS+=+kmod-mt76-connac +@DRIVER_11AX_SUPPORT
   FILES:= $(PKG_BUILD_DIR)/mt7921/mt7921-common.ko
 endef
 
+define KernelPackage/mt7921u
+  $(KernelPackage/mt76-default)
+  TITLE:=MediaTek MT7921U wireless driver
+  DEPENDS+=+kmod-mt76-usb +kmod-mt7921-common
+  FILES:= $(PKG_BUILD_DIR)/mt7921/mt7921u.ko
+  AUTOLOAD:=$(call AutoProbe,mt7921u)
+endef
+
 define KernelPackage/mt7921s
   $(KernelPackage/mt76-default)
-  TITLE:=MediaTek MT7921s wireless driver
-  DEPENDS+=@PCI_SUPPORT +kmod-mt76-connac +kmod-mt76-sdio +kmod-mt7921-common
+  TITLE:=MediaTek MT7921S wireless driver
+  DEPENDS+=+kmod-mt76-sdio +kmod-mt7921-common
   FILES:= $(PKG_BUILD_DIR)/mt7921/mt7921s.ko
   AUTOLOAD:=$(call AutoProbe,mt7921s)
 endef
@@ -244,7 +259,7 @@ endef
 define KernelPackage/mt7921e
   $(KernelPackage/mt76-default)
   TITLE:=MediaTek MT7921e wireless driver
-  DEPENDS+=@PCI_SUPPORT +kmod-mt76-connac +kmod-mt7921-common
+  DEPENDS+=@PCI_SUPPORT +kmod-mt7921-common
   FILES:= $(PKG_BUILD_DIR)/mt7921/mt7921e.ko
   AUTOLOAD:=$(call AutoProbe,mt7921e)
 endef
@@ -338,6 +353,9 @@ endif
 ifdef CONFIG_PACKAGE_kmod-mt7921-common
   PKG_MAKE_FLAGS += CONFIG_MT7921_COMMON=m
 endif
+ifdef CONFIG_PACKAGE_kmod-mt7921u
+  PKG_MAKE_FLAGS += CONFIG_MT7921U=m
+endif
 ifdef CONFIG_PACKAGE_kmod-mt7921s
   PKG_MAKE_FLAGS += CONFIG_MT7921S=m
 endif
@@ -438,6 +456,15 @@ define KernelPackage/mt7915e/install
 		$(1)/lib/firmware/mediatek
 endef
 
+define KernelPackage/mt7916-firmware/install
+	$(INSTALL_DIR) $(1)/lib/firmware/mediatek
+	cp \
+		$(PKG_BUILD_DIR)/firmware/mt7916_wa.bin \
+		$(PKG_BUILD_DIR)/firmware/mt7916_wm.bin \
+		$(PKG_BUILD_DIR)/firmware/mt7916_rom_patch.bin \
+		$(1)/lib/firmware/mediatek
+endef
+
 define KernelPackage/mt7921e/install
 	$(INSTALL_DIR) $(1)/lib/firmware/mediatek
 	cp \
@@ -473,7 +500,9 @@ $(eval $(call KernelPackage,mt7663-usb-sdio))
 $(eval $(call KernelPackage,mt7663u))
 $(eval $(call KernelPackage,mt7663s))
 $(eval $(call KernelPackage,mt7915e))
+$(eval $(call KernelPackage,mt7916-firmware))
 $(eval $(call KernelPackage,mt7921-common))
+$(eval $(call KernelPackage,mt7921u))
 $(eval $(call KernelPackage,mt7921s))
 $(eval $(call KernelPackage,mt7921e))
 $(eval $(call KernelPackage,mt76))
diff --git a/package/kernel/mt76/patches/100-Revert-of-net-pass-the-dst-buffer-to-of_get_mac_addr.patch b/package/kernel/mt76/patches/100-Revert-of-net-pass-the-dst-buffer-to-of_get_mac_addr.patch
deleted file mode 100644
index ede3cca1f0..0000000000
--- a/package/kernel/mt76/patches/100-Revert-of-net-pass-the-dst-buffer-to-of_get_mac_addr.patch
+++ /dev/null
@@ -1,26 +0,0 @@
-From: Felix Fietkau <nbd@nbd.name>
-Date: Tue, 23 Nov 2021 17:01:45 +0100
-Subject: [PATCH] Revert "of: net: pass the dst buffer to of_get_mac_address()"
-
-This reverts commit 4932c5d80153c336c77dbe8d7af9f8fdd879d01f.
----
-
---- a/eeprom.c
-+++ b/eeprom.c
-@@ -107,9 +107,15 @@ mt76_eeprom_override(struct mt76_phy *ph
- {
- 	struct mt76_dev *dev = phy->dev;
- 
-+#ifdef CONFIG_OF
- 	struct device_node *np = dev->dev->of_node;
-+	const u8 *mac = NULL;
- 
--	of_get_mac_address(np, phy->macaddr);
-+	if (np)
-+		mac = of_get_mac_address(np);
-+	if (!IS_ERR_OR_NULL(mac))
-+		ether_addr_copy(phy->macaddr, mac);
-+#endif
- 
- 	if (!is_valid_ether_addr(phy->macaddr)) {
- 		eth_random_addr(phy->macaddr);
diff --git a/package/kernel/mt76/patches/100-aggregation-definitions.patch b/package/kernel/mt76/patches/100-aggregation-definitions.patch
new file mode 100644
index 0000000000..a88d57133f
--- /dev/null
+++ b/package/kernel/mt76/patches/100-aggregation-definitions.patch
@@ -0,0 +1,13 @@
+--- a/mt7915/init.c
++++ b/mt7915/init.c
+@@ -327,8 +327,8 @@ mt7915_init_wiphy(struct ieee80211_hw *h
+ 	struct mt7915_dev *dev = phy->dev;
+ 
+ 	hw->queues = 4;
+-	hw->max_rx_aggregation_subframes = IEEE80211_MAX_AMPDU_BUF;
+-	hw->max_tx_aggregation_subframes = IEEE80211_MAX_AMPDU_BUF;
++	hw->max_rx_aggregation_subframes = IEEE80211_MAX_AMPDU_BUF_HE;
++	hw->max_tx_aggregation_subframes = IEEE80211_MAX_AMPDU_BUF_HE;
+ 	hw->netdev_features = NETIF_F_RXCSUM;
+ 
+ 	hw->radiotap_timestamp.units_pos =
diff --git a/package/kernel/mt76/patches/101-fix-encap-offload-ethernet-type-check.patch b/package/kernel/mt76/patches/101-fix-encap-offload-ethernet-type-check.patch
deleted file mode 100644
index d3deee42ce..0000000000
--- a/package/kernel/mt76/patches/101-fix-encap-offload-ethernet-type-check.patch
+++ /dev/null
@@ -1,59 +0,0 @@
-From: Felix Fietkau <nbd@nbd.name>
-To: linux-wireless@vger.kernel.org
-Cc: =?utf-8?q?Thibaut_VAR=C3=88NE?= <hacks+kernel@slashdirt.org>
-Subject: [PATCH] mt76: fix encap offload ethernet type check
-Date: Wed, 20 Apr 2022 14:33:08 +0200
-Message-Id: <20220420123308.70104-1-nbd@nbd.name>
-
-The driver needs to check if the format is 802.2 vs 802.3 in order to set
-a tx descriptor flag. skb->protocol can't be used, since it may not be properly
-initialized for packets coming in from a packet socket.
-Fix misdetection by checking the ethertype from the skb data instead
-
-Reported-by: Thibaut VARÃˆNE <hacks+kernel@slashdirt.org>
-Signed-off-by: Felix Fietkau <nbd@nbd.name>
----
- drivers/net/wireless/mediatek/mt76/mt7915/mac.c | 4 +++-
- drivers/net/wireless/mediatek/mt76/mt7921/mac.c | 4 +++-
- 2 files changed, 6 insertions(+), 2 deletions(-)
-
---- a/mt7915/mac.c
-+++ b/mt7915/mac.c
-@@ -977,6 +977,7 @@ mt7915_mac_write_txwi_8023(struct mt7915
- 
- 	u8 tid = skb->priority & IEEE80211_QOS_CTL_TID_MASK;
- 	u8 fc_type, fc_stype;
-+	u16 ethertype;
- 	bool wmm = false;
- 	u32 val;
- 
-@@ -990,7 +991,8 @@ mt7915_mac_write_txwi_8023(struct mt7915
- 	val = FIELD_PREP(MT_TXD1_HDR_FORMAT, MT_HDR_FORMAT_802_3) |
- 	      FIELD_PREP(MT_TXD1_TID, tid);
- 
--	if (be16_to_cpu(skb->protocol) >= ETH_P_802_3_MIN)
-+	ethertype = get_unaligned_be16(&skb->data[12]);
-+	if (ethertype >= ETH_P_802_3_MIN)
- 		val |= MT_TXD1_ETH_802_3;
- 
- 	txwi[1] |= cpu_to_le32(val);
---- a/mt7921/mac.c
-+++ b/mt7921/mac.c
-@@ -811,6 +811,7 @@ mt7921_mac_write_txwi_8023(struct mt7921
- {
- 	u8 tid = skb->priority & IEEE80211_QOS_CTL_TID_MASK;
- 	u8 fc_type, fc_stype;
-+	u16 ethertype;
- 	bool wmm = false;
- 	u32 val;
- 
-@@ -824,7 +825,8 @@ mt7921_mac_write_txwi_8023(struct mt7921
- 	val = FIELD_PREP(MT_TXD1_HDR_FORMAT, MT_HDR_FORMAT_802_3) |
- 	      FIELD_PREP(MT_TXD1_TID, tid);
- 
--	if (be16_to_cpu(skb->protocol) >= ETH_P_802_3_MIN)
-+	ethertype = get_unaligned_be16(&skb->data[12]);
-+	if (ethertype >= ETH_P_802_3_MIN)
- 		val |= MT_TXD1_ETH_802_3;
- 
- 	txwi[1] |= cpu_to_le32(val);
diff --git a/package/kernel/mt76/patches/110-api_update.patch b/package/kernel/mt76/patches/110-api_update.patch
index a42277704e..27bd6286b0 100644
--- a/package/kernel/mt76/patches/110-api_update.patch
+++ b/package/kernel/mt76/patches/110-api_update.patch
@@ -1,11 +1,11 @@
 --- a/tx.c
 +++ b/tx.c
-@@ -326,7 +326,7 @@ mt76_tx(struct mt76_phy *phy, struct iee
+@@ -325,7 +325,7 @@ mt76_tx(struct mt76_phy *phy, struct iee
  	if ((dev->drv->drv_flags & MT_DRV_HW_MGMT_TXQ) &&
  	    !(info->flags & IEEE80211_TX_CTL_HW_80211_ENCAP) &&
  	    !ieee80211_is_data(hdr->frame_control) &&
 -	    !ieee80211_is_bufferable_mmpdu(hdr->frame_control)) {
 +	    !ieee80211_is_bufferable_mmpdu(skb)) {
  		qid = MT_TXQ_PSD;
- 		skb_set_queue_mapping(skb, qid);
  	}
+ 
diff --git a/package/kernel/mt76/patches/120-wifi-mt76-ignore-key-disable-commands.patch b/package/kernel/mt76/patches/120-wifi-mt76-ignore-key-disable-commands.patch
index 3f97de916e..3ac6cebca8 100644
--- a/package/kernel/mt76/patches/120-wifi-mt76-ignore-key-disable-commands.patch
+++ b/package/kernel/mt76/patches/120-wifi-mt76-ignore-key-disable-commands.patch
@@ -34,7 +34,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	return mt7603_wtbl_set_key(dev, wcid->idx, key);
 --- a/mt7615/mac.c
 +++ b/mt7615/mac.c
-@@ -1231,8 +1231,7 @@ EXPORT_SYMBOL_GPL(mt7615_mac_set_rates);
+@@ -1178,8 +1178,7 @@ EXPORT_SYMBOL_GPL(mt7615_mac_set_rates);
  static int
  mt7615_mac_wtbl_update_key(struct mt7615_dev *dev, struct mt76_wcid *wcid,
  			   struct ieee80211_key_conf *key,
@@ -44,7 +44,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  {
  	u32 addr = mt7615_mac_wtbl_addr(dev, wcid->idx) + 30 * 4;
  	u8 data[32] = {};
-@@ -1241,27 +1240,18 @@ mt7615_mac_wtbl_update_key(struct mt7615
+@@ -1188,27 +1187,18 @@ mt7615_mac_wtbl_update_key(struct mt7615
  		return -EINVAL;
  
  	mt76_rr_copy(dev, addr, data, sizeof(data));
@@ -82,7 +82,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	}
  
  	mt76_wr_copy(dev, addr, data, sizeof(data));
-@@ -1272,7 +1262,7 @@ mt7615_mac_wtbl_update_key(struct mt7615
+@@ -1219,7 +1209,7 @@ mt7615_mac_wtbl_update_key(struct mt7615
  static int
  mt7615_mac_wtbl_update_pk(struct mt7615_dev *dev, struct mt76_wcid *wcid,
  			  enum mt76_cipher_type cipher, u16 cipher_mask,
@@ -91,7 +91,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  {
  	u32 addr = mt7615_mac_wtbl_addr(dev, wcid->idx), w0, w1;
  
-@@ -1291,9 +1281,7 @@ mt7615_mac_wtbl_update_pk(struct mt7615_
+@@ -1238,9 +1228,7 @@ mt7615_mac_wtbl_update_pk(struct mt7615_
  	else
  		w0 &= ~MT_WTBL_W0_RX_IK_VALID;
  
@@ -102,7 +102,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  		w0 &= ~MT_WTBL_W0_KEY_IDX;
  		w0 |= FIELD_PREP(MT_WTBL_W0_KEY_IDX, keyidx);
  	}
-@@ -1310,19 +1298,10 @@ mt7615_mac_wtbl_update_pk(struct mt7615_
+@@ -1257,19 +1245,10 @@ mt7615_mac_wtbl_update_pk(struct mt7615_
  
  static void
  mt7615_mac_wtbl_update_cipher(struct mt7615_dev *dev, struct mt76_wcid *wcid,
@@ -123,7 +123,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	if (cipher == MT_CIPHER_BIP_CMAC_128 &&
  	    cipher_mask & ~BIT(MT_CIPHER_BIP_CMAC_128))
  		return;
-@@ -1333,8 +1312,7 @@ mt7615_mac_wtbl_update_cipher(struct mt7
+@@ -1280,8 +1259,7 @@ mt7615_mac_wtbl_update_cipher(struct mt7
  
  int __mt7615_mac_wtbl_set_key(struct mt7615_dev *dev,
  			      struct mt76_wcid *wcid,
@@ -133,7 +133,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  {
  	enum mt76_cipher_type cipher;
  	u16 cipher_mask = wcid->cipher;
-@@ -1344,19 +1322,14 @@ int __mt7615_mac_wtbl_set_key(struct mt7
+@@ -1291,19 +1269,14 @@ int __mt7615_mac_wtbl_set_key(struct mt7
  	if (cipher == MT_CIPHER_NONE)
  		return -EOPNOTSUPP;
  
@@ -157,7 +157,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	if (err < 0)
  		return err;
  
-@@ -1367,13 +1340,12 @@ int __mt7615_mac_wtbl_set_key(struct mt7
+@@ -1314,13 +1287,12 @@ int __mt7615_mac_wtbl_set_key(struct mt7
  
  int mt7615_mac_wtbl_set_key(struct mt7615_dev *dev,
  			    struct mt76_wcid *wcid,
@@ -175,7 +175,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	return err;
 --- a/mt7615/main.c
 +++ b/mt7615/main.c
-@@ -405,18 +405,17 @@ static int mt7615_set_key(struct ieee802
+@@ -391,18 +391,17 @@ static int mt7615_set_key(struct ieee802
  
  	if (cmd == SET_KEY)
  		*wcid_keyidx = idx;
@@ -203,7 +203,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	mt7615_mutex_release(dev);
 --- a/mt7615/mt7615.h
 +++ b/mt7615/mt7615.h
-@@ -502,11 +502,9 @@ int mt7615_mac_write_txwi(struct mt7615_
+@@ -482,11 +482,9 @@ int mt7615_mac_write_txwi(struct mt7615_
  void mt7615_mac_set_timing(struct mt7615_phy *phy);
  int __mt7615_mac_wtbl_set_key(struct mt7615_dev *dev,
  			      struct mt76_wcid *wcid,
@@ -219,7 +219,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  
 --- a/mt76x02_util.c
 +++ b/mt76x02_util.c
-@@ -453,20 +453,20 @@ int mt76x02_set_key(struct ieee80211_hw
+@@ -455,20 +455,20 @@ int mt76x02_set_key(struct ieee80211_hw
  	msta = sta ? (struct mt76x02_sta *)sta->drv_priv : NULL;
  	wcid = msta ? &msta->wcid : &mvif->group_wcid;
  
@@ -251,9 +251,9 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  
 --- a/mt7915/main.c
 +++ b/mt7915/main.c
-@@ -405,16 +405,15 @@ static int mt7915_set_key(struct ieee802
- 
- 	mutex_lock(&dev->mt76.mutex);
+@@ -387,16 +387,15 @@ static int mt7915_set_key(struct ieee802
+ 		mt7915_mcu_add_bss_info(phy, vif, true);
+ 	}
  
 -	if (cmd == SET_KEY)
 +	if (cmd == SET_KEY) {
@@ -271,12 +271,12 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
 -			    cmd == SET_KEY ? key : NULL);
 -
 +	mt76_wcid_key_setup(&dev->mt76, wcid, key);
- 	err = mt7915_mcu_add_key(dev, vif, msta, key, cmd);
- 
- out:
+ 	err = mt76_connac_mcu_add_key(&dev->mt76, vif, &msta->bip,
+ 				      key, MCU_EXT_CMD(STA_REC_UPDATE),
+ 				      &msta->wcid, cmd);
 --- a/mt7921/main.c
 +++ b/mt7921/main.c
-@@ -441,16 +441,15 @@ static int mt7921_set_key(struct ieee802
+@@ -463,16 +463,15 @@ static int mt7921_set_key(struct ieee802
  
  	mt7921_mutex_acquire(dev);
  
@@ -296,6 +296,6 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
 -			    cmd == SET_KEY ? key : NULL);
 -
 +	mt76_wcid_key_setup(&dev->mt76, wcid, key);
- 	err = mt7921_mcu_add_key(dev, vif, msta, key, cmd);
- 	if (err)
- 		goto out;
+ 	err = mt76_connac_mcu_add_key(&dev->mt76, vif, &msta->bip,
+ 				      key, MCU_UNI_CMD(STA_REC_UPDATE),
+ 				      &msta->wcid, cmd);
-- 
2.40.0


From b8cd3428693f72f9a14af03a1770114c7974de09 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Karel=20Ko=C4=8D=C3=AD?= <karel.koci@nic.cz>
Date: Tue, 26 Feb 2019 11:13:28 +0100
Subject: [PATCH] Revert "kernel: bump 4.14 to 4.14.103"

This reverts commit ceed0665cc68ee836806b0cc7ca496a858063ce2.
---
 include/kernel-version.mk                                 | 4 ++--
 target/linux/generic/hack-4.14/721-phy_packets.patch      | 2 +-
 .../patches-4.14/202-core-linux-support-layerscape.patch  | 6 +++---
 .../707-dpaa-ethernet-support-layerscape.patch            | 8 ++++----
 .../patches-4.14/812-flexspi-support-layerscape.patch     | 2 +-
 5 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/include/kernel-version.mk b/include/kernel-version.mk
index 5f3dbf23bf..88599c763d 100644
--- a/include/kernel-version.mk
+++ b/include/kernel-version.mk
@@ -4,12 +4,12 @@ LINUX_RELEASE?=1
 
 LINUX_VERSION-3.18 = .136
 LINUX_VERSION-4.9 = .160
-LINUX_VERSION-4.14 = .103
+LINUX_VERSION-4.14 = .102
 LINUX_VERSION-4.19 = .25
 
 LINUX_KERNEL_HASH-3.18.136 = 48c8775013d23229462134f911bbb14c7935096fcccfb19ce28ecd5f7154f35c
 LINUX_KERNEL_HASH-4.9.160 = c09af067af62d299f5e33c279968de58c88fb7c59bd05e8f3bb460f611f60515
-LINUX_KERNEL_HASH-4.14.103 = 7aa43e34e4c9e5965da29cef5ae196e06006f8c0d1d65fd755a2f197f0796a11
+LINUX_KERNEL_HASH-4.14.102 = d8a982cfa2804edc2ae9d20792ab0e3897f3976ced5632f2392c2e1918562501
 LINUX_KERNEL_HASH-4.19.25 = 7ec71d90d6e96e6f741676d157ac06f30c75be4eaf1649143a3c8b7d4f919731
 
 remove_uri_prefix=$(subst git://,,$(subst http://,,$(subst https://,,$(1))))
diff --git a/target/linux/generic/hack-4.14/721-phy_packets.patch b/target/linux/generic/hack-4.14/721-phy_packets.patch
index e3c1c34a4f..fb977b10d4 100644
--- a/target/linux/generic/hack-4.14/721-phy_packets.patch
+++ b/target/linux/generic/hack-4.14/721-phy_packets.patch
@@ -136,7 +136,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  
  #include <net/protocol.h>
  #include <net/dst.h>
-@@ -503,6 +504,22 @@ skb_fail:
+@@ -499,6 +500,22 @@ skb_fail:
  }
  EXPORT_SYMBOL(__napi_alloc_skb);
  
diff --git a/target/linux/layerscape/patches-4.14/202-core-linux-support-layerscape.patch b/target/linux/layerscape/patches-4.14/202-core-linux-support-layerscape.patch
index c3e63003dd..a5a5f8b29a 100644
--- a/target/linux/layerscape/patches-4.14/202-core-linux-support-layerscape.patch
+++ b/target/linux/layerscape/patches-4.14/202-core-linux-support-layerscape.patch
@@ -522,7 +522,7 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
  		}
 --- a/net/core/skbuff.c
 +++ b/net/core/skbuff.c
-@@ -803,6 +803,32 @@ void napi_consume_skb(struct sk_buff *sk
+@@ -799,6 +799,32 @@ void napi_consume_skb(struct sk_buff *sk
  }
  EXPORT_SYMBOL(napi_consume_skb);
  
@@ -555,7 +555,7 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
  /* Make sure a field is enclosed inside headers_start/headers_end section */
  #define CHECK_SKB_FIELD(field) \
  	BUILD_BUG_ON(offsetof(struct sk_buff, field) <		\
-@@ -1322,7 +1348,7 @@ static void skb_headers_offset_update(st
+@@ -1318,7 +1344,7 @@ static void skb_headers_offset_update(st
  	skb->inner_mac_header += off;
  }
  
@@ -564,7 +564,7 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
  {
  	__copy_skb_header(new, old);
  
-@@ -1330,6 +1356,7 @@ static void copy_skb_header(struct sk_bu
+@@ -1326,6 +1352,7 @@ static void copy_skb_header(struct sk_bu
  	skb_shinfo(new)->gso_segs = skb_shinfo(old)->gso_segs;
  	skb_shinfo(new)->gso_type = skb_shinfo(old)->gso_type;
  }
diff --git a/target/linux/layerscape/patches-4.14/707-dpaa-ethernet-support-layerscape.patch b/target/linux/layerscape/patches-4.14/707-dpaa-ethernet-support-layerscape.patch
index bd62bceca0..df96aa5c6f 100644
--- a/target/linux/layerscape/patches-4.14/707-dpaa-ethernet-support-layerscape.patch
+++ b/target/linux/layerscape/patches-4.14/707-dpaa-ethernet-support-layerscape.patch
@@ -150624,7 +150624,7 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
 +#endif /* FSL_USDPAA_H */
 --- a/include/linux/netdev_features.h
 +++ b/include/linux/netdev_features.h
-@@ -79,6 +79,7 @@ enum {
+@@ -77,6 +77,7 @@ enum {
  	NETIF_F_HW_ESP_BIT,		/* Hardware ESP transformation offload */
  	NETIF_F_HW_ESP_TX_CSUM_BIT,	/* ESP with TX checksum offload */
  	NETIF_F_RX_UDP_TUNNEL_PORT_BIT, /* Offload of RX port for UDP tunnels */
@@ -150632,14 +150632,14 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
  
  	/*
  	 * Add your fresh new feature above and remember to update
-@@ -144,6 +145,7 @@ enum {
+@@ -142,6 +143,7 @@ enum {
  #define NETIF_F_HW_ESP		__NETIF_F(HW_ESP)
  #define NETIF_F_HW_ESP_TX_CSUM	__NETIF_F(HW_ESP_TX_CSUM)
  #define	NETIF_F_RX_UDP_TUNNEL_PORT  __NETIF_F(RX_UDP_TUNNEL_PORT)
 +#define NETIF_F_HW_ACCEL_MQ	__NETIF_F(HW_ACCEL_MQ)
  
- /* Finds the next feature with the highest number of the range of start till 0.
-  */
+ #define for_each_netdev_feature(mask_addr, bit)	\
+ 	for_each_set_bit(bit, (unsigned long *)mask_addr, NETDEV_FEATURE_COUNT)
 --- /dev/null
 +++ b/include/uapi/linux/fmd/Kbuild
 @@ -0,0 +1,5 @@
diff --git a/target/linux/layerscape/patches-4.14/812-flexspi-support-layerscape.patch b/target/linux/layerscape/patches-4.14/812-flexspi-support-layerscape.patch
index 0738fc7ad1..e768f82e68 100644
--- a/target/linux/layerscape/patches-4.14/812-flexspi-support-layerscape.patch
+++ b/target/linux/layerscape/patches-4.14/812-flexspi-support-layerscape.patch
@@ -78,7 +78,7 @@ Signed-off-by: Biwen Li <biwen.li@nxp.com>
  		DP_ERR(p_hwfn,
 --- a/drivers/net/phy/xilinx_gmii2rgmii.c
 +++ b/drivers/net/phy/xilinx_gmii2rgmii.c
-@@ -92,6 +92,11 @@ static int xgmiitorgmii_probe(struct mdi
+@@ -89,6 +89,11 @@ static int xgmiitorgmii_probe(struct mdi
  		return -EPROBE_DEFER;
  	}
  
-- 
2.21.0


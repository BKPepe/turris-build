From 944a02c26bb920c534b626e06af277f77410cf99 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Karel=20Ko=C4=8D=C3=AD?= <karel.koci@nic.cz>
Date: Wed, 17 Apr 2019 15:07:14 +0200
Subject: [PATCH] netifd: backport patch fixing problems with bridge control on
 64bit

This patch seems to be relevant to bridge configuration problems we are
encountering.
---
 package/network/config/netifd/Makefile        |   2 +-
 ...tem-linux-get-rid-of-SIOCSDEVPRIVATE.patch | 113 ++++++++++++++++++
 2 files changed, 114 insertions(+), 1 deletion(-)
 create mode 100644 package/network/config/netifd/patches/0001-system-linux-get-rid-of-SIOCSDEVPRIVATE.patch

diff --git a/package/network/config/netifd/Makefile b/package/network/config/netifd/Makefile
index 1c61ec8b05..b3f8e6afdb 100644
--- a/package/network/config/netifd/Makefile
+++ b/package/network/config/netifd/Makefile
@@ -1,7 +1,7 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=netifd
-PKG_RELEASE:=2.1
+PKG_RELEASE:=2.2
 
 PKG_SOURCE_PROTO:=git
 PKG_SOURCE_URL=$(PROJECT_GIT)/project/netifd.git
diff --git a/package/network/config/netifd/patches/0001-system-linux-get-rid-of-SIOCSDEVPRIVATE.patch b/package/network/config/netifd/patches/0001-system-linux-get-rid-of-SIOCSDEVPRIVATE.patch
new file mode 100644
index 0000000000..b861b1e97a
--- /dev/null
+++ b/package/network/config/netifd/patches/0001-system-linux-get-rid-of-SIOCSDEVPRIVATE.patch
@@ -0,0 +1,113 @@
+From 1d8712686af9159bc790488a7c88f67dbfd11fac Mon Sep 17 00:00:00 2001
+From: Hans Dedecker <dedeckeh@gmail.com>
+Date: Thu, 13 Dec 2018 16:13:06 +0100
+Subject: [PATCH] system-linux: get rid of SIOCSDEVPRIVATE
+
+Use sysfs to configure the bridge settings stp/forward_delay/priority
+ageing_time/hello_time and max_age as the SIOCDEVPRIVATE bridge ioctl
+has no compat ioctl support which makes it impossible to set the above
+mentioned bridge paramaters if the kernel is compiled in 64 bit mode
+and user_space in 32 bit mode.
+
+Signed-off-by: Hans Dedecker <dedeckeh@gmail.com>
+---
+ system-linux.c | 60 ++++++++++++++++++++++++++++++++++----------------
+ 1 file changed, 41 insertions(+), 19 deletions(-)
+
+diff --git a/system-linux.c b/system-linux.c
+index dbaba4a..96d50ae 100644
+--- a/system-linux.c
++++ b/system-linux.c
+@@ -418,6 +418,36 @@ static void system_bridge_set_startup_query_interval(struct device *dev, const c
+ 			      dev->ifname, val);
+ }
+ 
++static void system_bridge_set_stp_state(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/stp_state", dev->ifname, val);
++}
++
++static void system_bridge_set_forward_delay(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/forward_delay", dev->ifname, val);
++}
++
++static void system_bridge_set_priority(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/priority", dev->ifname, val);
++}
++
++static void system_bridge_set_ageing_time(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/ageing_time", dev->ifname, val);
++}
++
++static void system_bridge_set_hello_time(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/hello_time", dev->ifname, val);
++}
++
++static void system_bridge_set_max_age(struct device *dev, const char *val)
++{
++	system_set_dev_sysctl("/sys/devices/virtual/net/%s/bridge/max_age", dev->ifname, val);
++}
++
+ static void system_bridge_set_learning(struct device *dev, const char *val)
+ {
+ 	system_set_dev_sysctl("/sys/class/net/%s/brport/learning", dev->ifname, val);
+@@ -1102,41 +1132,33 @@ static void system_bridge_conf_multicast(struct device *bridge,
+ int system_bridge_addbr(struct device *bridge, struct bridge_config *cfg)
+ {
+ 	char buf[64];
+-	unsigned long args[4] = {};
+ 
+ 	if (ioctl(sock_ioctl, SIOCBRADDBR, bridge->ifname) < 0)
+ 		return -1;
+ 
+-	args[0] = BRCTL_SET_BRIDGE_STP_STATE;
+-	args[1] = !!cfg->stp;
+-	system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++	system_bridge_set_stp_state(bridge, cfg->stp ? "1" : "0");
+ 
+-	args[0] = BRCTL_SET_BRIDGE_FORWARD_DELAY;
+-	args[1] = sec_to_jiffies(cfg->forward_delay);
+-	system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++	snprintf(buf, sizeof(buf), "%lu", sec_to_jiffies(cfg->forward_delay));
++	system_bridge_set_forward_delay(bridge, buf);
+ 
+ 	system_bridge_conf_multicast(bridge, cfg, buf, sizeof(buf));
+ 
+-	args[0] = BRCTL_SET_BRIDGE_PRIORITY;
+-	args[1] = cfg->priority;
+-	system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++	snprintf(buf, sizeof(buf), "%d", cfg->priority);
++	system_bridge_set_priority(bridge, buf);
+ 
+ 	if (cfg->flags & BRIDGE_OPT_AGEING_TIME) {
+-		args[0] = BRCTL_SET_AGEING_TIME;
+-		args[1] = sec_to_jiffies(cfg->ageing_time);
+-		system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++		snprintf(buf, sizeof(buf), "%lu", sec_to_jiffies(cfg->ageing_time));
++		system_bridge_set_ageing_time(bridge, buf);
+ 	}
+ 
+ 	if (cfg->flags & BRIDGE_OPT_HELLO_TIME) {
+-		args[0] = BRCTL_SET_BRIDGE_HELLO_TIME;
+-		args[1] = sec_to_jiffies(cfg->hello_time);
+-		system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++		snprintf(buf, sizeof(buf), "%lu", sec_to_jiffies(cfg->hello_time));
++		system_bridge_set_hello_time(bridge, buf);
+ 	}
+ 
+ 	if (cfg->flags & BRIDGE_OPT_MAX_AGE) {
+-		args[0] = BRCTL_SET_BRIDGE_MAX_AGE;
+-		args[1] = sec_to_jiffies(cfg->max_age);
+-		system_bridge_if(bridge->ifname, NULL, SIOCDEVPRIVATE, &args);
++		snprintf(buf, sizeof(buf), "%lu", sec_to_jiffies(cfg->max_age));
++		system_bridge_set_max_age(bridge, buf);
+ 	}
+ 
+ 	return 0;
+-- 
+2.21.0
+
-- 
2.21.0


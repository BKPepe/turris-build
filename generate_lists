#!/bin/bash
# Updater-ng configuration lists generating script
# (C) 2018 CZ.NIC, z.s.p.o.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
set -e

output_path=
sign_key=
while [ $# -gt 0 ]; do
	case "$1" in
		-h|--help)
			echo "This script generates updater-ng configuration lists from Turris OS build repository."
			echo "Usage: $0 [OPTION]... OUTPUT_PATH"
			echo
			echo "Options:"
			echo "  --help, -h"
			echo "    Prints this help text."
			echo "  --sign KEY"
			echo "    Sign lists with given KEY and usign utility"
			echo "  --debug"
			echo "    Run this script in debug mode"
			exit
			;;
		--sign)
			shift
			sign_key="$1"
			;;
		--debug)
			set -x
			;;
		*)
			if [ -z "$output_path" ]; then
				output_path="$1"
			else
				echo "Unknown option: $1"
				exit 1
			fi
			;;
	esac
	shift
done

[ -n "$output_path" ] || output_path="generated_lists"
tb="$(dirname "$(readlink -f "$0")")"
[ -d "$tb/lists" -a -f "$tb/feeds.conf" ] || {
	echo "This script has to be in same direstory as feeds.conf and lists directory." >&2
	exit 1
}
. "$tb/helpers/generate_common.sh"

rm -rf "$output_path"
mkdir -p "$output_path"

"$tb/helpers/turris-version.sh" version > "$output_path/turris-version"
( cd "$tb" && git rev-parse HEAD > "$output_path/git-hash" )

m4args=( "--include=$tb/lists" "-D_INCLUDE_=$tb/lists/" "-D_FEEDS_=$tb/feeds.conf" )

for f in "$tb"/lists/*.lua.m4; do
	[ -f "$f" ] || continue
	m4 "${m4args[@]}" "$f" > "$output_path/$(basename "$f" | sed s/\.m4$//)"
done
for f in "$tb"/lists/*.lua; do
	[ -f "$f" ] || continue
	cp "$f" "$output_path/$(basename "$f")"
done

if [ -n "$sign_key" ]; then
	get_usign
	for list in "$output_path"/*.lua; do
		"$USIGN" -S -m "$list" -s "$sign_key"
	done
fi
